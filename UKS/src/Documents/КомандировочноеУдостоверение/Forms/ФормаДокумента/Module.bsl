&НаСервере
Процедура КоличествоДнейКомандеровки()
	Если ЗначениеЗаполнено(Объект.НачалоКомандировки) И ЗначениеЗаполнено(Объект.ОкончаниеКомандировки) Тогда
		Объект.КоличествоДней = ((Объект.ОкончаниеКомандировки - Объект.НачалоКомандировки)/86400)+1;
	Иначе
		Объект.КоличествоДней = Неопределено;
		Объект.ОкончаниеКомандировки = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеКомандировкиПриИзменении(Элемент)
	//Если Объект.ОкончаниеКомандировки < (Объект.НачалоКомандировки - 86400) Или Объект.ОкончаниеКомандировки < (ТекущаяДата() - 86400) И Не Объект.НачалоКомандировки = Дата(1,1,1,0,0,0) Тогда
	//	
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Дата окончания командировки введена некорректно";
	//	Сообщение.Сообщить();
	//	
	//	Объект.ОкончаниеКомандировки = Дата(1,1,1,0,0,0);
	//	
	//КонецЕсли;
	КоличествоДнейКомандеровки();

КонецПроцедуры

&НаКлиенте
Процедура НачалоКомандировкиПриИзменении(Элемент)
	//Если Объект.НачалоКомандировки < НачалоДня(ТекущаяДата()) Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Нельзя ставить начало командировки прошлым числом";
	//	Сообщение.Сообщить();
	//	
	//	Объект.НачалоКомандировки = ТекущаяДата();
	//КонецЕсли; 
	КоличествоДнейКомандеровки();
КонецПроцедуры

&НаКлиенте
Процедура ЦельКомандировкиЗаголовокНажатие(Элемент)
	ОбщегоНазначенияКлиент.ПроверитьПравописаниеТекста(Объект.ЦельКомандировки,Новый Структура,"Описание",ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКомандировачноеУдостоверение(Команда)
		
	Если ЗначениеЗаполнено(Объект.КудаКомандировать) И ЗначениеЗаполнено(Объект.НачалоКомандировки) И
		ЗначениеЗаполнено(Объект.ОкончаниеКомандировки) И ЗначениеЗаполнено(Объект.ЦельКомандировки) И
		Не Объект.ГруппаРаботников.Количество() = 0 Тогда
		
		Если Объект.ГруппаРаботников.Количество() = 1 Тогда
			
			ПараметрыПолей = ПараметрыПолейНаСервере(); 
			Результат = УправлениеПечатьюСервер.ПечататьКомандировкуСоло(ПараметрыПолей);
			УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);
		Иначе 
			
			ПараметрыПолей = ПараметрыПолейНаСервере();
			ПараметрыТаблиц = ПараметрыТаблицНаСервере();
			
			Результат = УправлениеПечатьюСервер.ПечататьКомандировку(ПараметрыПолей, ПараметрыТаблиц);
			УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);
			
		КонецЕсли;
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Введены не все поля для распечатки командировачного удостоверения";
		Сообщение.Сообщить();
	КонецЕсли;

	
КонецПроцедуры

&НаСервере 
Функция  ПараметрыПолейНаСервере()
	
	ПарметрыПолей = Новый Структура;
	ПарметрыПолей.Вставить("номер", Объект.Номер);
	ПарметрыПолей.Вставить("дата", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	ПарметрыПолей.Вставить("КудаКомандировать", Объект.КудаКомандировать);
	ПарметрыПолей.Вставить("НачалоКомандировки", Объект.НачалоКомандировки);
	ПарметрыПолей.Вставить("ОкончаниеКомандировки", Объект.ОкончаниеКомандировки);
	
	ПарметрыПолей.Вставить("НомерПриказа", Объект.НомерПриказа);
	Если Объект.ДатаПриказа = Дата(1,1,1,0,0,0) Тогда
		ПарметрыПолей.Вставить("ДатаПриказа", "          ");
	Иначе
	ПарметрыПолей.Вставить("ДатаПриказа", Объект.ДатаПриказа);
	КонецЕсли;

	
	
	ПарметрыПолей.Вставить("Подразделение", Объект.Подразделение.Наименование);
	ПарметрыПолей.Вставить("Руководитель", Объект.Руководитель.Наименование);
	ПарметрыПолей.Вставить("РуководительДолжность", Объект.Руководитель.Должность.Наименование);
	ПарметрыПолей.Вставить("КоДн", Объект.КоличествоДней);
	
	МассивДней = ПолучитьСклоненияСтрокиПоЧислу("день", Объект.КоличествоДней,,,"ПД=Именительный");
	Пробел = Найти(МассивДней[0]," ");
	Если Пробел > 0 Тогда
		ИскомаяСтрока = Сред(МассивДней[0],Пробел + 1);
	Иначе
		ИскомаяСтрока = МассивДней[0];
	КонецЕсли;
	ПарметрыПолей.Вставить("День", ИскомаяСтрока);
	
	Строка = СтрДлина(Объект.ЦельКомандировки.ПолноеНаименование);
	ПробелФ = СтрНайти(Объект.ЦельКомандировки.ПолноеНаименование," ",НаправлениеПоиска.СКонца);
	
	
	ПарметрыПолей.Вставить("Составитель", Объект.Составитель.Наименование);
	ПарметрыПолей.Вставить("Составитель0", Объект.Составитель.Наименование);
	ПарметрыПолей.Вставить("СоставительДолжность", Объект.Составитель.Должность.Наименование);
	

	ТекстДляВорд = Объект.ЦельКомандировки.ПолноеНаименование;
	
	КоличествоСимволов = 95;		
	НомерПервогоСимволаСтрокиПоиска = 95;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол > 95 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
	Иначе
		КоличествоСимволовВСтроке = 95;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		ПарметрыПолей.Вставить("ЦельКомандировки1" + К, ТекстВставки);
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	
	ПарметрыПолей.Вставить("ВыдалЗадание", Объект.ВыдалЗадание.Наименование);
	ПарметрыПолей.Вставить("ВыдалЗаданиеДолжность", Объект.ВыдалЗадание.Должность.Наименование);
	
ТекстДляВорд = Объект.ЦельКомандировки;
	
	КоличествоСимволов = 95;		
	НомерПервогоСимволаСтрокиПоиска = 95;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 95 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
		КоличествоСимволовВСтроке = 95;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		ПарметрыПолей.Вставить("ЦельКомандировки" + К, ТекстВставки);
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	
	ПарметрыПолей.Вставить("Д", Формат(Объект.НачалоКомандировки,"ДФ=дд"));
	ПарметрыПолей.Вставить("М", Сред(Формат(Объект.НачалоКомандировки,"ДФ=ддММММ"), 3));
	ПарметрыПолей.Вставить("Г", Формат(Объект.НачалоКомандировки,"ДФ=гггг"));	
	
	Возврат ПарметрыПолей;
КонецФункции

&НаСервере
Функция ПараметрыТаблицНаСервере()
	
	ПараметрыТаблиц = Новый Структура();
	ПараметрыТаблиц.Вставить("ГруппаРаботников",ПоместитьВоВременноеХранилище(Объект.ГруппаРаботников.Выгрузить(),ЭтаФорма.УникальныйИдентификатор));
	
	Возврат ПараметрыТаблиц;
КонецФункции

&НаСервере
Процедура КоличествоДнейПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.НачалоКомандировки) И Не Объект.КоличествоДней = 0 ТОгда
		
		Объект.ОкончаниеКомандировки = Объект.НачалоКомандировки +( 86400 * (Объект.КоличествоДней - 1));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейПриИзменении(Элемент)
	КоличествоДнейПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалаениеПустых()
	ывафы = Объект.ГруппаРаботников.Выгрузить();
	номерДляПорядка = 1;
	Для Каждого Кок Из ывафы Цикл
		
		Если Кок.ФИОполное = Справочники.Сотрудники.ПустаяСсылка() Тогда
			Объект.ГруппаРаботников.Удалить(Кок.НомерСтроки - номерДляПорядка);
			номерДляПорядка = номерДляПорядка + 1;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	УдалаениеПустых();

	Если ПроверкаСостовителяВТаблице() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Составителя нет в таблице сотрудников";
		Сообщение.Поле = "ГруппаРаботников";
		Сообщение.ПутьКДанным = "Объект.ГруппаРаботников";
		Сообщение.Сообщить();
		Отказ = Истина;

		
	КонецЕсли;
	
	Для Каждого Ключ Из ПараметрыЗаписи Цикл
		ЗначениеПараметраЗаписи = Ключ.Значение;
	КонецЦикла;
	
	Если не ЗначениеЗаполнено(Объект.ГруппаРаботников) Тогда 
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран ни один сотрудник в таблице";
		Сообщение.Поле = "ГруппаРаботников";
		Сообщение.ПутьКДанным = "Объект.ГруппаРаботников";
		Сообщение.Сообщить();
		Отказ = Истина;

		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Составитель) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Состовитель"" не заполнено";
		Сообщение.Поле = "Составитель";
		Сообщение.ПутьКДанным = "Объект.Составитель";
		Сообщение.Сообщить();
		Отказ = Истина;
		
	КонецЕсли;

	
	Если Не ЗначениеЗаполнено(Объект.ЦельКомандировки) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Цель командировки"" не заполнено";
		Сообщение.Поле = "ЦельКомандировки";
		Сообщение.ПутьКДанным = "Объект.ЦельКомандировки";
		Сообщение.Сообщить();
		Отказ = Истина;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Руководитель) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Руководитель"" не заполнено";
		Сообщение.Поле = "Руководитель";
		Сообщение.ПутьКДанным = "Объект.Руководитель";		
		Сообщение.Сообщить();
		Отказ = Истина;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ВыдалЗадание) Тогда 
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Выдал задание"" не заполнено";
		Сообщение.Поле = "ВыдалЗадание";
		Сообщение.ПутьКДанным = "Объект.ВыдалЗадание";		
		Сообщение.Сообщить();
		Отказ = Истина;
		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Объект.КудаКомандировать) Тогда
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Куда"" не заполнено";
		Сообщение.Поле = "КудаКомандировать";
		Сообщение.ПутьКДанным = "Объект.КудаКомандировать";		
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Объект.НачалоКомандировки = Дата(1, 1, 1, 0, 0, 0) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Начало командировки"" не заполнено";
		Сообщение.Поле = "НачалоКомандировки";
		Сообщение.ПутьКДанным = "Объект.НачалоКомандировки";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Функция  ПроверкаСостовителяВТаблице()
	УсловСотруд = Истина;
	ПроверкаСотрудника = Объект.ГруппаРаботников.Выгрузить(,"ФИОполное");
	Для Каждого Стрд Из ПроверкаСотрудника Цикл
		
		Если Стрд.ФИОполное = Объект.Составитель Тогда 
			
			УсловСотруд = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат УсловСотруд;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КлиентПользователя = "";
	ПолучитьКлиентПользователя(КлиентПользователя);
	
	Если РольДоступна("Администратор") Тогда
		Элементы.Печать.Видимость = Истина;	
	КонецЕсли; 

	
	Если ПараметрыСеанса.ТекущийПользователь.Пользователь = Истина И Не РольДоступна("Администратор") И Не РольДоступна("Командировка") Тогда
		ОбщегоНазначенияНаСервере.ПолучитьТекущегоОтдела(Объект.Подразделение);
		Если Объект.Подразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
			НовыйМассив1 = Новый Массив();
			НовыйФиксМасс1 = Новый ФиксированныйМассив(НовыйМассив1);
			Элементы.Составитель.СвязиПараметровВыбора = НовыйФиксМасс1;
		Иначе
			НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Подразделение", "Объект.Подразделение");
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НоваяСвязь);
			НовыйФиксМасс = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.Составитель.СвязиПараметровВыбора = НовыйФиксМасс;	
		КонецЕсли;
	КонецЕсли;	
		
	Если РольДоступна("Заявка") и РольДоступна("Командировка") Тогда
		
		Элементы.ЗаписатьИЗакрыть.Видимость = Истина;
	ИначеЕсли РольДоступна("Администратор") Тогда
		Элементы.НомерПриказа.ТолькоПросмотр = Ложь;
		Элементы.ДатаПриказа.ТолькоПросмотр = Ложь;	
	КонецЕсли;
	
	Если Объект.Руководитель = Справочники.Сотрудники.ПустаяСсылка() Тогда
		Объект.Руководитель = Справочники.Сотрудники.НайтиПоРеквизиту("Должность", Справочники.Должности.НайтиПоНаименованию("Директор"));
	КонецЕсли;
	
	
	
	МассивДляВыбора = Новый Массив();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.ИмяРуководителя КАК ИмяРуководителя
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		МассивДляВыбора.Добавить(ВыборкаДетальныеЗаписи.ИмяРуководителя.Наименование);
		
	КонецЦикла;

	МассивДляВыбора.Добавить(Справочники.Сотрудники.НайтиПоРеквизиту("Должность",Справочники.Должности.НайтиПоНаименованию("Первый заместитель директора - главный инженер")).Наименование);
	
	МасПарам = Новый Массив();
	МасПарам.Добавить(Новый ПараметрВыбора("Отбор.Наименование", МассивДляВыбора));
	ФиксМасс = Новый ФиксированныйМассив(МасПарам);
	
	Элементы.ВыдалЗадание.ПараметрыВыбора = ФиксМасс;

	//++++++++++++++++++++++++++++++++++++++++++++++++++
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Должность.Наименование ПОДОБНО ""%Начальник%""";
	
	                                       
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	кол = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		как = ВыборкаДетальныеЗаписи.Наименование;
	КонецЦикла;
	

	Если Объект.Проведен = Истина Тогда 
	
		ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	//+++++++++++++++++++++++++++++++++++++++++
	МассивДляВыбора = Новый Массив();
	МассивДляВыбора.Добавить(Справочники.Должности.НайтиПоНаименованию("Директор"));
	МассивДляВыбора.Добавить(Справочники.Должности.НайтиПоНаименованию("Первый заместитель директора - главный инженер"));
	
	МасПарам = Новый Массив();
	МасПарам.Добавить(Новый ПараметрВыбора("Отбор.Должность", МассивДляВыбора));
	ФиксМасс = Новый ФиксированныйМассив(МасПарам);
	
	Элементы.Руководитель.ПараметрыВыбора = ФиксМасс;

	Если Не Объект.НомерПриказа = "" Тогда 
		Элементы.ГруппаПриказ.Видимость = Истина;
	КонецЕсли;
	

КонецПроцедуры

&НаСервере
Процедура СоставительПриИзмененииНаСервере(ТекстВыбора)
	ЛогикЗапол = Истина;
	Иа = Объект.ГруппаРаботников.Выгрузить();
		Для Каждого Стр Из Иа Цикл
		Если Стр.ФИОполное.Наименование = ТекстВыбора Тогда 
		ЛогикЗапол	= Ложь;
		КонецЕсли;
	КонецЦикла;

	
	Если Не Объект.Составитель = Справочники.Сотрудники.ПустаяСсылка() И ЛогикЗапол Тогда 
		Объект.ГруппаРаботников.Добавить().ФИОполное = Объект.Составитель;
		ЗаписьСостовителя = Объект.Составитель;
	
	КонецЕсли;
	
	Объект.Подразделение = Объект.Составитель.Подразделение;
	Объект.ВыдалЗадание = Объект.Составитель.Подразделение.ИмяРуководителя;
КонецПроцедуры

&НаКлиенте
Процедура СоставительПриИзменении(Элемент)
	ТекстВыбора = Элемент.ВыделенныйТекст;
	СоставительПриИзмененииНаСервере(ТекстВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВПриказ(Команда)
		ПараметрыПолей = ПараметрыПолейВПриказНаСервере();
	
	Результат = УправлениеПечатьюСервер.ПечататьКомандировкуВПриказ(ПараметрыПолей);
	УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);

КонецПроцедуры

&НаСервере 
Функция  ПараметрыПолейВПриказНаСервере()
	ПарметрыПолей = Новый Структура;
	
	ГрупРаб = Объект.ГруппаРаботников;
	КолГруп = ГрупРаб.Количество();
	Для Каждого СотГруп Из ГрупРаб Цикл
		парам = "" + СотГруп.ФИОполное.Должность + " " + СотГруп.ФИОполное.Наименование + ", "; 
		СтрокаСотрудник = "" + СтрокаСотрудник + СтрСоединить(ПолучитьСклоненияСтроки( парам,,"ПД=Винительный")," ");
	КонецЦикла;
	сооб = "" + Объект.КудаКомандировать;
	СтрокаПриказКаманд = СтрокаСотрудник;
	ПарметрыПолей.Вставить("МЕСТИОРГ", сооб);
	
	
	ТекстДляВорд = Объект.ЦельКомандировки.Наименоваине;
	
	КоличествоСимволов = 40;		
	НомерПервогоСимволаСтрокиПоиска = 70;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
		ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = КоличествоСимволов Тогда
			КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
			КоличествоСимволовВСтроке = 70;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		ПарметрыПолей.Вставить("ЦЕЛЬ" + К, ТекстВставки);
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		КоличествоСимволов = 70;
 	КонецЦикла;
	
	ПарметрыПолей.Вставить("НАЧАЛКОМА", Объект.НачалоКомандировки);
	ПарметрыПолей.Вставить("ОКОНКОМА", Объект.ОкончаниеКомандировки);
	ПарметрыПолей.Вставить("ДНЕЙКОМА", Объект.КоличествоДней);
	ПарметрыПолей.Вставить("ДОЛЖНОСТЬНАЧАЛЬНИ", Объект.ВыдалЗадание.Должность.Наименование);
	ПарметрыПолей.Вставить("ФИОНАЧАЛЬНИ", Объект.ВыдалЗадание.Наименование);
	
	ТекстДляВорд = СтрокаПриказКаманд;

	КоличествоСимволов = 42;		
	НомерПервогоСимволаСтрокиПоиска = 70;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
		ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = КоличествоСимволов Тогда
			КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
			КоличествоСимволовВСтроке = 70;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		ПарметрыПолей.Вставить("ГРУППАКОМАН" + К, ТекстВставки);
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;
		
		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		КоличествоСимволов = 70;
	КонецЦикла;
	

	МассивДней = ПолучитьСклоненияСтрокиПоЧислу("день", Объект.КоличествоДней,,,"ПД=Именительный");
	Пробел = Найти(МассивДней[0]," ");
	Если Пробел > 0 Тогда
		ИскомаяСтрока = Сред(МассивДней[0],Пробел + 1);
	Иначе
		ИскомаяСтрока = МассивДней[0];
	КонецЕсли;
	ПарметрыПолей.Вставить("ДНЕЙТЕК",ИскомаяСтрока);
	
	Возврат ПарметрыПолей;
КонецФункции

&НаСервере 
Функция  РольЗаявки()
	УсловРоль = Ложь;
	Если РольДоступна("Заявка") Тогда
		УсловРоль = Истина;
	КонецЕсли;
	Возврат УсловРоль;
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Для Каждого Ключ Из ПараметрыЗаписи Цикл
		ЗначениеПараметраЗаписи = Ключ.Значение;
	КонецЦикла;
	
	Если ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли;
	ЗаписьНового();
КонецПроцедуры

&НаСервере
Функция ЗаписьНового()
	
	Если Объект.НомерПриказа = "" И Не РольДоступна("Командировка") И Не РольДоступна("Администратор") Тогда
		ПосчетДокументов = 0;
		НомерДокумента = 0;
		Арлиывдам = Документы.ПриказКомандировки.Выбрать(НачалоДня(ТекущаяДата()),КонецДня(ТекущаяДата()));
		
		Пока Арлиывдам.Следующий() Цикл
			залп = Арлиывдам.ВыбранныеПриказы.Выгрузить(,"НазваниеКомандировки");
			ПосчетДокументов = ПосчетДокументов+1;
			НомерДокумента = Арлиывдам.Номер;
			НомерПриказа = Арлиывдам.НомерПриказа;
			ПроведенПриказ =  Арлиывдам.Проведен;
		КонецЦикла;
		
		Если Объект.НомерПриказа = "" Тогда
			Если ПосчетДокументов = 0 Или ПроведенПриказ Тогда
				НовыйПриказ = Документы.ПриказКомандировки.СоздатьДокумент();
				Пара =  НовыйПриказ.ВыбранныеПриказы.Добавить();
				Пара.НазваниеКомандировки = Объект.Ссылка;
				НовыйПриказ.Дата = ТекущаяДата();
				НовыйПриказ.ПодписываетПриказ = Справочники.Сотрудники.НайтиПоРеквизиту("Должность",Справочники.Должности.НайтиПоНаименованию("Директор"));
				НовыйПриказ.Записать();
				НовыйПриказ.НомерПриказа = СокрЛП(НовыйПриказ.Номер) + "/К";
				НовыйПриказ.ДатаПриказа = НовыйПриказ.Дата;
				НовыйПриказ.Записать();
				Объект.НомерПриказа = НовыйПриказ.НомерПриказа;
				Объект.ДатаПриказа = НовыйПриказ.ДатаПриказа;
				Записать();
			ИначеЕсли Не НомерПриказа = "" И Не ПроведенПриказ Тогда
				НовыйПриказ = Документы.ПриказКомандировки.НайтиПоНомеру(НомерДокумента);
				ДопПриказ = НовыйПриказ.ПолучитьОбъект();
				Пара =  ДопПриказ.ВыбранныеПриказы.Добавить();
				Пара.НазваниеКомандировки = Объект.Ссылка;
				ДопПриказ.Записать();
				Объект.НомерПриказа = НовыйПриказ.НомерПриказа;
				Объект.ДатаПриказа = НовыйПриказ.ДатаПриказа;
				Записать();
			конецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ГруппаРаботниковФИОполноеПриИзмененииНаСервере(ТекстПро,НомерТекСтр)
	пара =  Объект.ГруппаРаботников.Выгрузить();
	Для Каждого Стр Из пара Цикл
		Если Стр.ФИОполное.Наименование = ТекстПро И (Стр.НомерСтроки ) < НомерТекСтр Тогда 
			Объект.ГруппаРаботников.Удалить(НомерТекСтр - 1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаРаботниковФИОполноеПриИзменении(Элемент)
	ЭлементПро = Элемент;
	НомерТекСтр = ЭлементПро.Родитель.ТекущиеДанные.НомерСтроки;
	ТекстПро = ЭлементПро.ТекстРедактирования;
	ГруппаРаботниковФИОполноеПриИзмененииНаСервере(ТекстПро,НомерТекСтр);
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	Объект.ВыдалЗадание = Объект.Подразделение.ИмяРуководителя;
	Если Объект.Подразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		НовыйМассив1 = Новый Массив();
		НовыйФиксМасс1 = Новый ФиксированныйМассив(НовыйМассив1);
		Элементы.Составитель.СвязиПараметровВыбора = НовыйФиксМасс1;
	Иначе
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Подразделение", "Объект.Подразделение");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыйФиксМасс = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Составитель.СвязиПараметровВыбора = НовыйФиксМасс;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПодразделениеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Записать();
	Если РольЗаявки() Тогда
		
		Закрыть();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПечатьКомандировкиНаСервере()
	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.КомандировочноеУдостоверение.ПолучитьМакет("КомандировочноеУдостоверениеИКоллективныйАвансовыйОтчет");
	ПервыйЛист1 = Макет.ПолучитьОбласть("Лист11");
	ПервыйЛист2 = Макет.ПолучитьОбласть("Лист12");

	ТаблСотр = Макет.ПолучитьОбласть("ТаблСотруд");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверение.Ссылка КАК Ссылка,
		|	КомандировочноеУдостоверение.Номер КАК Номер,
		|	КомандировочноеУдостоверение.Дата КАК Дата,
		|	КомандировочноеУдостоверение.КудаКомандировать КАК КудаКомандировать,
		|	КомандировочноеУдостоверение.НачалоКомандировки КАК НачалоКомандировки,
		|	КомандировочноеУдостоверение.ОкончаниеКомандировки КАК ОкончаниеКомандировки,
		|	КомандировочноеУдостоверение.ЦельКомандировки КАК ЦельКомандировки,
		|	КомандировочноеУдостоверение.Подразделение КАК Подразделение,
		|	КомандировочноеУдостоверение.ВыдалЗадание КАК ВыдалЗадание,
		|	КомандировочноеУдостоверение.Составитель КАК Составитель,
		|	КомандировочноеУдостоверение.КоличествоДней КАК КоличествоДней,
		|	КомандировочноеУдостоверение.Руководитель КАК Руководитель,
		|	КомандировочноеУдостоверение.НомерПриказа КАК НомерПриказа,
		|	КомандировочноеУдостоверение.ДатаПриказа КАК ДатаПриказа,
		|	КомандировочноеУдостоверение.ЗаданиеПоКомандировке КАК ЗаданиеПоКомандировке
		|ИЗ
		|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	    Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	КомандИнфо = ВыборкаДетальныеЗаписи;
	КонецЕсли;
	
	ПервыйЛист1.Параметры.Номер = КомандИнфо.Номер;
	ПервыйЛист1.Параметры.Дата = Формат(КомандИнфо.Дата,"ДФ=dd.MM.yyyy");
	ПервыйЛист1.Параметры.Подразделение = КомандИнфо.Подразделение;
	ТаблДок.Вывести(ПервыйЛист1);
	
	Шапка1 = Макет.ПолучитьОбласть("ШапкаСотрудникПервыйЛист");

	Шапка1.Область("ШапкаСотрудникПервыйЛист").ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	
	ТаблДок.Вывести(Шапка1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверениеГруппаРаботников.НомерСтроки КАК НомерСтроки,
		|	КомандировочноеУдостоверениеГруппаРаботников.ФИОполное КАК ФИОполное,
		|	КомандировочноеУдостоверениеГруппаРаботников.Примечание КАК Примечание
		|ИЗ
		|	Документ.КомандировочноеУдостоверение.ГруппаРаботников КАК КомандировочноеУдостоверениеГруппаРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|		ПО КомандировочноеУдостоверениеГруппаРаботников.Ссылка = КомандировочноеУдостоверение.Ссылка
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	      Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КоличествоСтрок = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТаблСотр.Параметры.Ном = ВыборкаДетальныеЗаписи.НомерСтроки;
		ТаблСотр.Параметры.ФИОПолн = ВыборкаДетальныеЗаписи.ФИОполное.ПолноеНаименование;
		ТаблСотр.Параметры.Долж = ВыборкаДетальныеЗаписи.ФИОполное.Должность;
		ТаблСотр.Параметры.Примич = ВыборкаДетальныеЗаписи.Примечание;
		ТаблДок.Вывести(ТаблСотр);
		КоличествоСтрок = КоличествоСтрок + 1;
	КонецЦикла;
	
	Пока КоличествоСтрок <10 Цикл 
		ТаблСотр.Параметры.Ном = "";
		ТаблСотр.Параметры.ФИОПолн = "";
		ТаблСотр.Параметры.Долж = "";
		ТаблСотр.Параметры.Примич = "";
		ТаблДок.Вывести(ТаблСотр);
		КоличествоСтрок = КоличествоСтрок + 1;		
	КонецЦикла;
	
	ПервыйЛист2.Параметры.КудаКомандировать = КомандИнфо.КудаКомандировать;
	ПервыйЛист2.Параметры.День = ПолучитьСклоненияСтрокиПоЧислу("день", КомандИнфо.КоличествоДней,,,"ПД=Именительный")[0];
	ПервыйЛист2.Параметры.НачалоКомандировки = Формат(КомандИнфо.НачалоКомандировки,"ДЛФ=DD");
	ПервыйЛист2.Параметры.ОкончаниеКомандировки = Формат(КомандИнфо.ОкончаниеКомандировки,"ДЛФ=DD");
	ПервыйЛист2.Параметры.ЦельКомандировки01 = Врег(Лев(КомандИнфо.ЦельКомандировки.ПолноеНаименование,1)) + Сред(КомандИнфо.ЦельКомандировки.ПолноеНаименование,2);
	ПервыйЛист2.Параметры.НомерПриказа = КомандИнфо.НомерПриказа;
	ПервыйЛист2.Параметры.ДатаПриказа = Формат(КомандИнфо.ДатаПриказа,"ДФ=dd.MM.yyyy");
	ПервыйЛист2.Параметры.РуководительДолжность = КомандИнфо.Руководитель.Должность;
	ПервыйЛист2.Параметры.Руководитель = КомандИнфо.Руководитель;
	ПервыйЛист2.Параметры.Д = Формат(КомандИнфо.НачалоКомандировки,"ДФ=дд");
	ПервыйЛист2.Параметры.М = Сред(Формат(КомандИнфо.НачалоКомандировки,"ДФ=ддММММ"), 3);
	ПервыйЛист2.Параметры.Г = Формат(КомандИнфо.НачалоКомандировки,"ДФ=гггг");
	ТаблДок.Вывести(ПервыйЛист2);

	ТаблДок.ВывестиГоризонтальныйРазделительСтраниц();

	
	ВторойЛист1 = Макет.ПолучитьОбласть("Лист21");
	ВторойЛист2 = Макет.ПолучитьОбласть("Лист22");
	ШапкаТаб2 = Макет.ПолучитьОбласть("ШапкаТаблСотруд1");
	ТаблСотр2 = Макет.ПолучитьОбласть("ФИОПолнСотр");
	ПодвалТабл = Макет.ПолучитьОбласть("ПодвалСотр");
	
	ТаблДок.Вывести(ВторойЛист1);
	ТаблДок.Вывести(ШапкаТаб2);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверениеГруппаРаботников.НомерСтроки КАК НомерСтроки,
		|	КомандировочноеУдостоверениеГруппаРаботников.ФИОполное КАК ФИОполное
		|ИЗ
		|	Документ.КомандировочноеУдостоверение.ГруппаРаботников КАК КомандировочноеУдостоверениеГруппаРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|		ПО КомандировочноеУдостоверениеГруппаРаботников.Ссылка = КомандировочноеУдостоверение.Ссылка
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	      Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КоличествоСтрок = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТаблСотр2.Параметры.Номер = ВыборкаДетальныеЗаписи.НомерСтроки;
		ТаблСотр2.Параметры.ФИОПолн = ВыборкаДетальныеЗаписи.ФИОполное.Наименование; 	
		ТаблДок.Вывести(ТаблСотр2);
		КоличествоСтрок = КоличествоСтрок + 1;		
	КонецЦикла;
	Пока КоличествоСтрок <10 Цикл 
		ТаблСотр2.Параметры.Номер = "";
		ТаблСотр2.Параметры.ФИОПолн = "";
		ТаблДок.Вывести(ТаблСотр2);
		КоличествоСтрок = КоличествоСтрок + 1;		
	КонецЦикла;

	
	ТаблДок.Вывести(ПодвалТабл);

	ВторойЛист2.Параметры.СоставительДолжность = КомандИнфо.Составитель.Должность;
	ВторойЛист2.Параметры.Составитель = КомандИнфо.Составитель.Наименование;
	
	ТекстДляВорд = Врег(Лев(КомандИнфо.ЗаданиеПоКомандировке,1)) + Сред(КомандИнфо.ЗаданиеПоКомандировке,2);
	
	КоличествоСимволов = 110;		
	НомерПервогоСимволаСтрокиПоиска = 110;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 110 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
		КоличествоСимволовВСтроке = 110;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		Если К = 0 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки0 = ТекстВставки;
		ИначеЕсли К = 1 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки1 = ТекстВставки;
		ИначеЕсли К = 2 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки2 = ТекстВставки;
		ИначеЕсли К = 3 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки3 = ТекстВставки;
		ИначеЕсли К = 4 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки4 = ТекстВставки;			
		ИначеЕсли К = 5 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки5 = ТекстВставки;			
		ИначеЕсли К = 6 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки6 = ТекстВставки;			
		ИначеЕсли К = 7 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки7 = ТекстВставки;
		ИначеЕсли К = 8 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки8 = ТекстВставки;
		КонецЕсли;
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	ВторойЛист2.Параметры.ВыдалЗаданиеДолжность = КомандИнфо.ВыдалЗадание.Должность;
	ВторойЛист2.Параметры.ВыдалЗадание = КомандИнфо.ВыдалЗадание.Наименование;
	ТаблДок.Вывести(ВторойЛист2);

	
Возврат ТаблДок;
	
КонецФункции

&НаСервере
Функция ПечатьКомандировкиДляОдногоНаСервере()
	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.КомандировочноеУдостоверение.ПолучитьМакет("КомандировачныйЛистДляОдного");
	Лист1 = Макет.ПолучитьОбласть("Лист1");
	Лист2 = Макет.ПолучитьОбласть("Лист2");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверение.Ссылка КАК Ссылка,
		|	КомандировочноеУдостоверение.Номер КАК Номер,
		|	КомандировочноеУдостоверение.Дата КАК Дата,
		|	КомандировочноеУдостоверение.КудаКомандировать КАК КудаКомандировать,
		|	КомандировочноеУдостоверение.НачалоКомандировки КАК НачалоКомандировки,
		|	КомандировочноеУдостоверение.ОкончаниеКомандировки КАК ОкончаниеКомандировки,
		|	КомандировочноеУдостоверение.ЦельКомандировки КАК ЦельКомандировки,
		|	КомандировочноеУдостоверение.Подразделение КАК Подразделение,
		|	КомандировочноеУдостоверение.ВыдалЗадание КАК ВыдалЗадание,
		|	КомандировочноеУдостоверение.Составитель КАК Составитель,
		|	КомандировочноеУдостоверение.КоличествоДней КАК КоличествоДней,
		|	КомандировочноеУдостоверение.Руководитель КАК Руководитель,
		|	КомандировочноеУдостоверение.НомерПриказа КАК НомерПриказа,
		|	КомандировочноеУдостоверение.ДатаПриказа КАК ДатаПриказа
		|ИЗ
		|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	    Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	КомандИнфо = ВыборкаДетальныеЗаписи;
	КонецЕсли;
	
	Лист1.Параметры.НОМЕР = КомандИнфо.Номер;
	Лист1.Параметры.ДАТА = Формат(КомандИнфо.Дата,"ДФ=dd.MM.yyyy");
		
	Лист1.Параметры.КудаКомандировать = КомандИнфо.КудаКомандировать;
	Лист1.Параметры.КоДн = ПолучитьСклоненияСтрокиПоЧислу("день", КомандИнфо.КоличествоДней,,,"ПД=Именительный")[0];
	Лист1.Параметры.Д = Формат(КомандИнфо.НачалоКомандировки,"ДФ=дд");
	Лист1.Параметры.М = Сред(Формат(КомандИнфо.НачалоКомандировки,"ДФ=ддММММ"), 3);
	Лист1.Параметры.Г = Формат(КомандИнфо.НачалоКомандировки,"ДФ=гггг");

	
	Лист1.Параметры.НачалоКомандировки = Формат(КомандИнфо.НачалоКомандировки,"ДФ=dd.MM.yyyy");
	
	Лист1.Параметры.ОкончаниеКомандировки = Формат(КомандИнфо.ОкончаниеКомандировки,"ДФ=dd.MM.yyyy");
	
	
	Лист1.Параметры.НомерПриказа = КомандИнфо.НомерПриказа;
	Лист1.Параметры.ДатаПриказа = Формат(КомандИнфо.ДатаПриказа,"ДФ=dd.MM.yyyy");
	Лист1.Параметры.РуководительДолжность = КомандИнфо.Руководитель.Должность;
	Лист1.Параметры.Руководитель = КомандИнфо.Руководитель;
	
	Лист1.Параметры.СоставительДолжность = КомандИнфо.Составитель.Должность;
	Лист1.Параметры.Составитель = КомандИнфо.Составитель.ПолноеНаименование;
	Лист1.Параметры.Составитель0 = КомандИнфо.Составитель.Наименование;
	
	
	ТаблДок.Вывести(Лист1);
	
	ТаблДок.ВывестиГоризонтальныйРазделительСтраниц();
		

	ТекстДляВорд = Врег(Лев(КомандИнфо.ЦельКомандировки.ПолноеНаименование,1)) + Сред(КомандИнфо.ЦельКомандировки.ПолноеНаименование,2);
	
	КоличествоСимволов = 100;		
	НомерПервогоСимволаСтрокиПоиска = 100;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 100 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
		КоличествоСимволовВСтроке = 100;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		Если К = 0 Тогда
			Лист2.Параметры.ЦельКомандировки0 = ТекстВставки;
		ИначеЕсли К = 1 Тогда
			Лист2.Параметры.ЦельКомандировки1 = ТекстВставки;
		ИначеЕсли К = 2 Тогда
			Лист2.Параметры.ЦельКомандировки2 = ТекстВставки;
		ИначеЕсли К = 3 Тогда
			Лист2.Параметры.ЦельКомандировки3 = ТекстВставки;
		ИначеЕсли К = 4 Тогда
			Лист2.Параметры.ЦельКомандировки4 = ТекстВставки;			
		ИначеЕсли К = 5 Тогда
			Лист2.Параметры.ЦельКомандировки5 = ТекстВставки;			
		ИначеЕсли К = 6 Тогда
			Лист2.Параметры.ЦельКомандировки6 = ТекстВставки;			
		ИначеЕсли К = 7 Тогда
			Лист2.Параметры.ЦельКомандировки7 = ТекстВставки;
		ИначеЕсли К = 8 Тогда
			Лист2.Параметры.ЦельКомандировки8 = ТекстВставки;
		КонецЕсли;
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	Лист2.Параметры.ВыдалЗаданиеДолжность = КомандИнфо.ВыдалЗадание.Должность;
	Лист2.Параметры.ВыдалЗадание = КомандИнфо.ВыдалЗадание.Наименование;
	ТаблДок.Вывести(Лист2);

	
Возврат ТаблДок;
	
КонецФункции


&НаКлиенте
Процедура ПечатьКомандировочногоЛиста(Команда)
	
	Если ЗначениеЗаполнено(Объект.КудаКомандировать) И ЗначениеЗаполнено(Объект.НачалоКомандировки) И
		ЗначениеЗаполнено(Объект.ОкончаниеКомандировки) И ЗначениеЗаполнено(Объект.ЦельКомандировки) И
		Не Объект.ГруппаРаботников.Количество() = 0 Тогда
		НазваниеДокумента = "Командировочное удостоверение и Авансовый отчет " + Объект.Номер + " от " + Объект.Дата;
		Если Объект.ГруппаРаботников.Количество() = 1 Тогда
			ТаблДок = ПечатьКомандировкиДляОдногоНаСервере();
		Иначе
			ТаблДок = ПечатьКомандировкиНаСервере();
		КонецЕсли;
		ТаблДок.ОтображатьСетку = Ложь;
		//ТаблДок.Защита = Истина;
		ТаблДок.АвтоМасштаб = Истина;
		ТаблДок.ТолькоПросмотр = Истина;
		ТаблДок.ОтображатьЗаголовки = Ложь;
		ТаблДок.АвтоМасштаб=ложь; 	
		ТаблДок.МасштабПечати = 100;
		ТаблДок.ПолеСлева=15;
		ТаблДок.Показать(НазваниеДокумента);
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Введены не все поля для распечатки командировачного удостоверения";
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПечатьКомандировкиВПриказНаСервере()
	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.КомандировочноеУдостоверение.ПолучитьМакет("МакетКомандировкиВПриказ");
	ЛистВПриказ = Макет.ПолучитьОбласть("ПолеВПриказ");
	ТекстСотрудник = "";
	ДолжностьДляУкорота = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверениеГруппаРаботников.ФИОполное.Должность.Наименование КАК ФИОполноеДолжностьНаименование,
		|	КомандировочноеУдостоверениеГруппаРаботников.ФИОполное.Наименование КАК ФИОполноеНаименование
		|ИЗ
		|	Документ.КомандировочноеУдостоверение.ГруппаРаботников КАК КомандировочноеУдостоверениеГруппаРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|		ПО КомандировочноеУдостоверениеГруппаРаботников.Ссылка = КомандировочноеУдостоверение.Ссылка
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если СтрНайти(ВыборкаДетальныеЗаписи.ФИОполноеДолжностьНаименование,"Водитель") Тогда
			ДолжностьДляУкорота = "Водитель";
		ИначеЕсли СтрДлина(ВыборкаДетальныеЗаписи.ФИОполноеДолжностьНаименование) > 35 Тогда
			
			ДлинаДолдностиКом = СтрНайти(ВыборкаДетальныеЗаписи.ФИОполноеДолжностьНаименование, " ", НаправлениеПоиска.СКонца, 35);
			
			ДолжностьДляУкорота = Сред(ВыборкаДетальныеЗаписи.ФИОполноеДолжностьНаименование, 0, ДлинаДолдностиКом);
			
		Иначе 
			
			ДолжностьДляУкорота = ВыборкаДетальныеЗаписи.ФИОполноеДолжностьНаименование;
			
		КонецЕсли;
		ТекстСотрудник = ТекстСотрудник + ДолжностьДляУкорота + " " +  ВыборкаДетальныеЗаписи.ФИОполноеНаименование+", ";
		
	КонецЦикла;

	ТекстДляВорд = Лев(ТекстСотрудник, СтрДлина(ТекстСотрудник)-2);
	
	КоличествоСимволов = 75;		
	НомерПервогоСимволаСтрокиПоиска = 90;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 3 Цикл
		ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = КоличествоСимволов Тогда
			КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
			КоличествоСимволовВСтроке = 90;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		
		Если К = 0 Тогда
			ЛистВПриказ.Параметры.ГРУППАКОМАН0 = ТекстВставки;
		ИначеЕсли К = 1 Тогда
			ЛистВПриказ.Параметры.ГРУППАКОМАН1 = ТекстВставки;
		ИначеЕсли К = 2 Тогда
			ЛистВПриказ.Параметры.ГРУППАКОМАН2= ТекстВставки;
		ИначеЕсли К = 3 Тогда
			ЛистВПриказ.Параметры.ГРУППАКОМАН3= ТекстВставки;
		КонецЕсли;
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		КоличествоСимволов = 90;
 	КонецЦикла;
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверение.КудаКомандировать КАК КудаКомандировать,
		|	КомандировочноеУдостоверение.НачалоКомандировки КАК НачалоКомандировки,
		|	КомандировочноеУдостоверение.ОкончаниеКомандировки КАК ОкончаниеКомандировки,
		|	КомандировочноеУдостоверение.КоличествоДней КАК КоличествоДней,
		|	КомандировочноеУдостоверение.ВыдалЗадание.Наименование КАК ВыдалЗаданиеНаименование,
		|	КомандировочноеУдостоверение.ВыдалЗадание.Должность.Наименование КАК ВыдалЗаданиеДолжностьНаименование,
		|	КомандировочноеУдостоверение.ЦельКомандировки КАК ЦельКомандировки
		|ИЗ
		|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ИнфоДляЛистаВПриказ = ВыборкаДетальныеЗаписи;
	КонецЦикла;
	
	
	ЛистВПриказ.Параметры.МЕСТИОРГ = ИнфоДляЛистаВПриказ.КудаКомандировать;
	ЛистВПриказ.Параметры.ДНЕЙКОМА = ПолучитьСклоненияСтрокиПоЧислу("день", ИнфоДляЛистаВПриказ.КоличествоДней,,,"ПД=Именительный")[0];
	ЛистВПриказ.Параметры.НАЧАЛКОМА = Формат(ИнфоДляЛистаВПриказ.НачалоКомандировки,"ДФ=dd.MM.yyyy");
	ЛистВПриказ.Параметры.ОКОНКОМА = Формат(ИнфоДляЛистаВПриказ.ОкончаниеКомандировки,"ДФ=dd.MM.yyyy"); 	
	ЛистВПриказ.Параметры.ФИОНАЧАЛЬНИ = ИнфоДляЛистаВПриказ.ВыдалЗаданиеНаименование;
	ЛистВПриказ.Параметры.ДОЛЖНОСТЬНАЧАЛЬНИ = ИнфоДляЛистаВПриказ.ВыдалЗаданиеДолжностьНаименование;	
	
	ТекстДляВорд = Врег(Лев(ИнфоДляЛистаВПриказ.ЦельКомандировки,1)) + Сред(ИнфоДляЛистаВПриказ.ЦельКомандировки,2);
	
	КоличествоСимволов = 65;		
	НомерПервогоСимволаСтрокиПоиска = 90;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 3 Цикл
		ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = КоличествоСимволов Тогда
			КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
			КоличествоСимволовВСтроке = 90;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		
		Если К = 0 Тогда
			ЛистВПриказ.Параметры.ЦЕЛЬ0 = ТекстВставки;
		ИначеЕсли К = 1 Тогда
			ЛистВПриказ.Параметры.ЦЕЛЬ1 = ТекстВставки;
		ИначеЕсли К = 2 Тогда
			ЛистВПриказ.Параметры.ЦЕЛЬ2 = ТекстВставки;
		ИначеЕсли К = 3 Тогда
			ЛистВПриказ.Параметры.ЦЕЛЬ3 = ТекстВставки;
		КонецЕсли;
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		КоличествоСимволов = 90;
 	КонецЦикла;
	
	
	ТаблДок.Вывести(ЛистВПриказ);	
	Возврат ТаблДок;	
КонецФункции


&НаКлиенте
Процедура ПечататьВПриказ(Команда)
	Если ЗначениеЗаполнено(Объект.КудаКомандировать) И ЗначениеЗаполнено(Объект.НачалоКомандировки) И
		ЗначениеЗаполнено(Объект.ОкончаниеКомандировки) И ЗначениеЗаполнено(Объект.ЦельКомандировки) И
		Не Объект.ГруппаРаботников.Количество() = 0 Тогда
		ТаблДок = ПечатьКомандировкиВПриказНаСервере();
		ТаблДок.ОтображатьСетку = Ложь;
		ТаблДок.АвтоМасштаб = Истина;
		ТаблДок.ТолькоПросмотр = Истина;
		ТаблДок.МасштабПечати = 100;
		ТаблДок.ПолеСлева=15;
		ТаблДок.ОтображатьЗаголовки = Ложь; 
		ТаблДок.Показать("В Приказ");
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Введены не все поля для распечатки командировачного удостоверения";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлиентПользователя(ИмяПриложения)
	НомерСоединения  = НомерСоединенияИнформационнойБазы();
	
	СеансыИБ = ПолучитьСеансыИнформационнойБазы();        
    Для Каждого Сеанс Из СеансыИБ Цикл         
        Если Сеанс.НомерСоединения = НомерСоединения Тогда
				ИмяПриложения = ПредставлениеПриложения(Сеанс.ИмяПриложения); 
        КонецЕсли;   
    КонецЦикла;
	Возврат ИмяПриложения;
КонецФункции


&НаСервере
Процедура ЦельКомандировкиПриИзмененииНаСервере()

	Объект.ЗаданиеПоКомандировке = Объект.ЦельКомандировки.ПолноеНаименование;
	
КонецПроцедуры


&НаКлиенте
Процедура ЦельКомандировкиПриИзменении(Элемент)
	ЦельКомандировкиПриИзмененииНаСервере();
КонецПроцедуры

