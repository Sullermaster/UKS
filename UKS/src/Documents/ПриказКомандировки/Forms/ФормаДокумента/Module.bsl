&НаСервере
Процедура ПриказСПродлениемПриИзмененииНаСервере()
	Если Объект.ПриказСПродлением = Истина Тогда
		Элементы.ВыбранныеПриказыПродлениеПоДату.Видимость = Истина;
		КомандировачныеУдостоверения.Отбор.Элементы.Очистить();
	Иначе
		Элементы.ВыбранныеПриказыПродлениеПоДату.Видимость = Ложь;
		ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"НомерПриказа", "", ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
		ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"ПометкаУдаления", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриказСПродлениемПриИзменении(Элемент)
	ПриказСПродлениемПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПеретаскиваниеКомандировочнойСДатой(Командировка)
	
	ссылка = Командировка;
	НоваяСтракаВТаблице = Объект.ВыбранныеПриказы.Добавить();
	НоваяСтракаВТаблице.НазваниеКомандировки = ссылка;

	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПриказыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Для каждого ТекушьЗнач из ПараметрыПеретаскивания.Значение Цикл
		Если ПроверкаТабЧас(ТекушьЗнач) Тогда
			
			ПеретаскиваниеКомандировочнойСДатой(ТекушьЗнач);
			
		КонецЕсли;	 	
	КонецЦикла;
Модифицированность = Истина;
КонецПроцедуры

&НаСервере 
Функция ПроверкаТабЧас(ПараметрПров)
	
	ТаблЗначКоманд = Объект.ВыбранныеПриказы.Выгрузить(,"НазваниеКомандировки");
	
	Проб = Истина;
	
	Для каждого ТекуЗнач из ТаблЗначКоманд Цикл
		Если ТекуЗнач.НазваниеКомандировки = ПараметрПров Тогда
			Проб = Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Проб;
КонецФункции

&НаКлиенте
Процедура РаспечататьПриказ(Команда)
	Если Модифицированность = Ложь Тогда
		Если ЗначениеЗаполнено(Объект.ВыбранныеПриказы) Тогда
			Если Не Объект.НомерПриказа = 0 И ЗначениеЗаполнено(Объект.ДатаПриказа) Тогда
				ПараметрыПолей = ПараметрыПолейНаСервере();	
				Результат = УправлениеПечатьюСервер.ПечататьКомандировкуПриказ(ПараметрыПолей);
				УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Дата или номер приказа незаполнены";
				Сообщение.Сообщить();
			КонецЕсли;
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не выбраны командировочные";
			Сообщение.Сообщить();
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нельзя распечатать не записанный документ";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Функция  ПараметрыПолейНаСервере()
	ПарметрыПолей = Новый Структура;
	Кол = Объект.ВыбранныеПриказы.Количество();
	СтрокаПриказКаманд = "";
	СтрокаСотрудник = "";
	СтрокаСВодителем = "";
	итерТекст = 1;
	итерОбзац = 1;
	итерКо = 0;
	итерСо = 0;	
	КолВоди = 0;
	
	ТекстНомераПриказа = Формат(Объект.ДатаПриказа, "ДФ=dd.MM.yyyy")+ "г. № "+Объект.НомерПриказа;
	
	ПарметрыПолей.Вставить("НомерПриказа0", ТекстНомераПриказа);
	
	Пока итерКо < Кол цикл
	   	
		Командир = Объект.ВыбранныеПриказы[итерКо].НазваниеКомандировки;
		
		ТекстВступления = "";
		ТекстПодежаОтВида = "";
		Если Не Объект.НомерПриказа = Командир.НомерПриказа Тогда
			
			ТекстВступления = "Продлить командировку (приказ о командировании " + Командир.НомерПриказа +" от " + Формат(Командир.ДатаПриказа, "ДЛФ=DD")  + ") ";
			ТекстПодежаОтВида = "ПД=Дательный";
		Иначе 
		    ТекстВступления = "Командировать " ;
			ТекстПодежаОтВида = "ПД=Винительный";
		КонецЕсли;
		
		колСо = Командир.ГруппаРаботников.Количество();
		Пока итерСо < колСо Цикл

			пол = "ПЛ=Мужской";
			ПолПоОтчеству = Прав(СокрП(Командир.ГруппаРаботников[итерСо].ФИОполное.ПолноеНаименование),2);
			Если ПолПоОтчеству = "ич" Тогда
				Пол = "ПЛ=Мужской";
			ИначеЕсли ПолПоОтчеству = "на" Тогда
				Пол = "ПЛ=Женский";
			КонецЕсли;
			
			КоличествоСклонений = ПолучитьСклоненияСтроки(Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,Пол,ТекстПодежаОтВида).Количество();
			НомерПриСклонении = 0;
			Если КоличествоСклонений > 1 Тогда
				НомерПриСклонении = 1;
			КонецЕсли;
			
			парам = "" + ПолучитьСклоненияСтроки(Нрег(Командир.ГруппаРаботников[итерСо].ФИОполное.Должность),Пол,ТекстПодежаОтВида)[0] + " " + ПолучитьСклоненияСтроки(Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,Пол,ТекстПодежаОтВида)[НомерПриСклонении] ;
			ПоискВодитель =Найти(парам, "водите");
			Если ПоискВодитель > 0 Тогда
				СтрокаСВодителем = ПолучитьСклоненияСтроки( Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,,"ПД=Дательный")[НомерПриСклонении];
				КолВоди = КолВоди + 1;
			КонецЕсли;
			СтрокаСотрудник = СтрокаСотрудник + парам + ", ";               
			итерСо = итерСо + 1;	
		КонецЦикла;
		
		СтрокаСотрудник = Лев(СтрокаСотрудник,СтрДлина(СтрокаСотрудник)-2);
		
		Позиция = Найти(СтрокаСотрудник, "Водителя");
		ТекстНачалаИОкончанияКомандировки = "";
		
		Если Командир.НомерПриказа = Объект.НомерПриказа Тогда 
			КоличествоДнейПриПродлениии = Командир.КоличествоДней;
			
			Если Командир.КоличествоДней = 1 тогда
				ТекстНачалаИОкончанияКомандировки = " " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			ИначеЕсли НачалоМесяца(Командир.НачалоКомандировки) = НачалоМесяца(Командир.ОкончаниеКомандировки)  Тогда 
				ТекстНачалаИОкончанияКомандировки = " с " + Формат(Командир.НачалоКомандировки, "ДФ=дд") + " по " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			ИначеЕсли НачалоГода(Командир.НачалоКомандировки) = НачалоГода(Командир.ОкончаниеКомандировки)  Тогда 
				ТекстНачалаИОкончанияКомандировки = " с " + Формат(Командир.НачалоКомандировки, "ДФ='дд ММММ'; ДЛФ=DD") + " по " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			Иначе
				ТекстНачалаИОкончанияКомандировки = " с " + Формат(Командир.НачалоКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г." + " по " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			КонецЕсли;
		Иначе 
			
			
			КоДнДляМод = ((Командир.ОкончаниеКомандировки - Объект.ВыбранныеПриказы[итерКо].ПродлениеПоДату)/86400); 
			КоличествоДнейПриПродлениии = Макс(КоДнДляМод,-КоДнДляМод);
			
			ТекстНачалаИОкончанияКомандировки = " по " + Формат(Объект.ВыбранныеПриказы[итерКо].ПродлениеПоДату, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			
		КонецЕсли;
		
		Если Объект.ВыбранныеПриказы[итерКо].ВОднодневнуюКомандировку = Истина Тогда 
			КомандироватьВОднодневную = "в однодневную командировку ";
		ИначеЕсли Объект.ВыбранныеПриказы[итерКо].ВОднодневнуюКомандировку = Ложь Тогда
			КомандироватьВОднодневную = "";
		КонецЕсли;
		
		СтрокаПриказКаманд = СтрокаПриказКаманд + ТекстВступления + КомандироватьВОднодневную + СтрокаСотрудник + " в " + Командир.КудаКомандировать + " для " +
		Командир.ЦельКомандировки.ПолноеНаименование + " на " 	+ ПолучитьСклоненияСтрокиПоЧислу("день", КоличествоДнейПриПродлениии,,,"ПД=Именительный")[0] + ТекстНачалаИОкончанияКомандировки;
		
		СуточнаяНорма = " " + ПолучитьСклоненияСтрокиПоЧислу("рубль", Объект.СуточнаяНормаВыплатВодителю)[0] + ".";
		
		Если КолВоди > 0 И Объект.ВыбранныеПриказы[итерКо].ВыплатаВодителю И Объект.ВыбранныеПриказы[итерКо].СВозвращением Тогда
			СтрокаПриказКаманд =СтрокаПриказКаманд+ " с ежедневным возвращением к месту жительства." + " Общая выплата водителю " + СтрокаСВодителем + " составляет в сутки" + СуточнаяНорма;	
		ИначеЕсли КолВоди > 0 И Объект.ВыбранныеПриказы[итерКо].ВыплатаВодителю  Тогда
			СтрокаПриказКаманд = СтрокаПриказКаманд+ " Общая выплата водителю " + СтрокаСВодителем + " составляет в сутки" + СуточнаяНорма;
			КолВоди = 0;
		ИначеЕсли Объект.ВыбранныеПриказы[итерКо].СВозвращением Тогда 		
			СтрокаПриказКаманд =СтрокаПриказКаманд+ " с ежедневным возвращением к месту жительства.";
		КонецЕсли;
		
		// Если дни командировки выпадают на выходной день то он переносится на рабочий день
		Если Объект.ВыбранныеПриказы[итерКо].СчитатьРабочимиДнями = Истина Тогда
			
			Если Не Объект.ВыбранныеПриказы[итерКо].РабочиеНачало = Дата(1,1,1) Или Не Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Дата(1,1,1) Тогда
				
				//Количество рабочих дней
				Если Объект.ВыбранныеПриказы[итерКо].РабочиеНачало = Дата(1,1,1) Или  Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Дата(1,1,1) Тогда 
					МодульЧисла = 1;
				Иначе 
					КоличествоДней = (НачалоДня(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание) - НачалоДня(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало))/(60*60*24);
					МодульЧисла = ?(КоличествоДней > 0, КоличествоДней, -КоличествоДней)+1;
				КонецЕсли;
				
				ВыходныеДни = "";
				
				РабочиеДни = "";
				ТекстДаты = "";
				//Текст промежутка между датами 
				Если МодульЧисла > 2 Тогда
					ТекстДаты = " по "
				Иначе 
					ТекстДаты = " и ";
				КонецЕсли;
				
				// Рабочие
				// Рабочий один день
				Если МодульЧисла = 1 тогда
					Если Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Дата(1,1,1)
						Или Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Объект.ВыбранныеПриказы[итерКо].РабочиеНачало Тогда
						
						РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочим днем";
						
					ИначеЕсли Объект.ВыбранныеПриказы[итерКо].РабочиеНачало = Дата(1,1,1) Тогда
						
						РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочим днем";
					КонецЕсли;
				//Рабочий в приделах одного месяца	
				ИначеЕсли НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало) = НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание)  Тогда 
					
					РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ=дд") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочими днями";
				//Рабочие в пределах одного года 	
				ИначеЕсли НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание)  Тогда 
					
					РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ='дд ММММ'; ДЛФ=DD") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочими днями";
				//Рабочние дни между годами	
				ИначеЕсли Не НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание)  Тогда 
					
					РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ='дд ММММ гггг'; ДЛФ=DD")+" г." + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г." + " рабочими днями";
					
				КонецЕсли;
				
				//Количество выходных дней 
				Если Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) Или  Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1) Тогда 
					МодульЧисла = 1;
				Иначе 
					КоличествоДней = ((НачалоДня(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание) - НачалоДня(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало))/(60*60*24)) + 1;
					МодульЧисла = ?(КоличествоДней > 0, КоличествоДней, -КоличествоДней)+1;
				КонецЕсли;
				
				// Выходные
				// Выходной по требованию рабочего
				Если итерСо = 1 Тогда 
				ОтКоличестваСотрудников = "работника.";
			ИначеЕсли итерСо > 1 Тогда 
				ОтКоличестваСотрудников = "работников."
				КонецЕсли;
				
				Если Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание Или	Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) И Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1) Тогда
					Если МодульЧисла = 1 Тогда 
						ВыходныеДни = " выходного дня по заявлению " + ОтКоличестваСотрудников;	
					Иначе 
						ВыходныеДни = " выходных дней по заявлению " + ОтКоличестваСотрудников;	
					КонецЕсли;
				Иначе
					// Выходной один день 
					Если МодульЧисла = 1 И (Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) Или Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1)
						Или Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание) Тогда 
						
						Если Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1) Или Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание Тогда
							
							ВыходныеДни = " выходного дня " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ='дд ММММ гггг';ДЛФ=DD")  + " г.";
							
						ИначеЕсли Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) Тогда
							
							ВыходныеДни = " выходного дня " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
						КонецЕсли;
					// Выходные дни в пределах месяца	
					ИначеЕсли НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало) = НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание)  Тогда 
						
						ВыходныеДни = " выходных дней " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ=дд") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
					// Выходные дни в пределах года	
					ИначеЕсли НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание)  Тогда 
						
						ВыходныеДни = " выходных дней " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ='дд ММММ'; ДЛФ=DD") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
					// Выходные дни между годами 	
					ИначеЕсли Не НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание)  Тогда 
						
						ВыходныеДни = " выходных дней " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ='дд ММММ гггг'; ДЛФ=DD")+" г." + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
						
					КонецЕсли;
				КонецЕсли;
				
				СтрокаПриказКаманд = СтрокаПриказКаманд + " Считать" + РабочиеДни  + ", с предоставлением" + ВыходныеДни;
				
			Иначе
				
				Сообщить("Не выбранна дата начала рабочих дней");
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если итерКо < Кол-1 Тогда
			СтрокаПриказКаманд = СтрокаПриказКаманд + Символ(94) + Символ(112);
		КонецЕсли;
		
		итерКо = итерКо+1;
		итерСо = 0; 
		СтрокаСотрудник = "";
		КолВоди = 0;
	КонецЦикла;
                
	СтрокаПриказКаманд = СтрЗаменить(СтрокаПриказКаманд,"i","I"); 
	СтрокаПриказКаманд =  Документы.ПриказКомандировки.ЗаменаКавычек(СтрокаПриказКаманд);

	//КолВоди = 0;
	ТекстВводаВорд = "";
	НачальныйНомерСимвола = 0;
	КоличесвоОтобранныхСимволов = 255;
	Пока итерОбзац < 41 Цикл
	
		СтрокаДляВводаВВорд = Сред(СтрокаПриказКаманд,НачальныйНомерСимвола,КоличесвоОтобранныхСимволов);
		
		Если Лев(СтрокаДляВводаВВорд,1) = " " Тогда
			СтрокаДляВводаВВорд = Сред(СтрокаПриказКаманд,НачальныйНомерСимвола,КоличесвоОтобранныхСимволов - 1);
			НачальныйНомерСимвола = НачальныйНомерСимвола+254;
		ИначеЕсли Прав(СтрокаДляВводаВВорд,1) = Символ(94) Тогда
			СтрокаДляВводаВВорд = Сред(СтрокаПриказКаманд,НачальныйНомерСимвола,КоличесвоОтобранныхСимволов - 1);
			НачальныйНомерСимвола = НачальныйНомерСимвола+254;

		ИначеЕсли Прав(СтрокаДляВводаВВорд,1) = "“" Тогда
			СтрокаДляВводаВВорд = Сред(СтрокаПриказКаманд,НачальныйНомерСимвола,КоличесвоОтобранныхСимволов);
			НачальныйНомерСимвола = НачальныйНомерСимвола+255; 
		Иначе
			НачальныйНомерСимвола = НачальныйНомерСимвола+255; 
		КонецЕсли;
		
		ПарметрыПолей.Вставить("Кого" + итерОбзац, СтрокаДляВводаВВорд);
		
		Если  итерОбзац = 1 Тогда
			НачальныйНомерСимвола = НачальныйНомерСимвола + 1;
		КонецЕсли;
		
		итерОбзац = итерОбзац + 1;

	КонецЦикла;
	
	ПарметрыПолей.Вставить("ДолжностьН", Объект.ПодписываетПриказ.Должность.Наименование);
	ПарметрыПолей.Вставить("ФИОН",Объект.ПодписываетПриказ.Наименование);	
	
	Возврат ПарметрыПолей;
	
	
КонецФункции

&НаСервере
Процедура УдалаениеПустых()
	ОбъектТабВыбранного = Объект.ВыбранныеПриказы.Выгрузить();
	НомерДляПорядка = 1;
	Для Каждого Стр Из ОбъектТабВыбранного Цикл
		
		Если Стр.НазваниеКомандировки = Документы.КомандировочноеУдостоверение.ПустаяСсылка() Тогда
			Объект.ВыбранныеПриказы.Удалить(Стр.НомерСтроки - НомерДляПорядка);
			НомерДляПорядка = НомерДляПорядка + 1;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Для Каждого Ключ Из ПараметрыЗаписи Цикл
		ЗначениеПараметраЗаписи = Ключ.Значение;
	КонецЦикла;

	Если Объект.ДатаПриказа = Дата(1,1,1) Тогда
		Объект.ДатаПриказа = Объект.Дата;
	КонецЕсли;
	
	УдалаениеПустых();
	
	
	РаботаСТаблицамиПриказа();
	
	Если ПроверкаНаОтличиеНомеровПриказа() Тогда 
		Отказ = Истина;
		Объект.ПриказСПродлением = Истина;
		ПриказСПродлениемПриИзмененииНаСервере();
	КонецЕсли;
	
	
	
	Если ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И Объект.ВыбранныеПриказы.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для приказа не выбрана ни одна командировочная";
		Сообщение.Сообщить();   
		
		Отказ = Истина;
		
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Функция ПроверкаНаДатуПродления()
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ПриказКомандировкиВыбранныеПриказы.НазваниеКомандировки.НомерПриказа КАК НазваниеКомандировкиНомерПриказа
	//|ИЗ
	//|	Документ.ПриказКомандировки.ВыбранныеПриказы КАК ПриказКомандировкиВыбранныеПриказы
	//|ГДЕ
	//|	ПриказКомандировкиВыбранныеПриказы.Ссылка = &Ссылка";
	//
	//Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//ОтказПриСовпадении = Ложь;
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	Если Не ВыборкаДетальныеЗаписи.НазваниеКомандировкиНомерПриказа = Объект.НомерПриказа И Не Объект.НомерПриказа = "" 
	//		И Не ВыборкаДетальныеЗаписи.НазваниеКомандировкиНомерПриказа = "" Тогда 
	//		Сообщить("Есть командировочные на продление, необходимо убрать командировочную с другим номером приказа!!!");
	//		
	//		ОтказПриСовпадении = Истина;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Возврат ОтказПриСовпадении;
КонецФункции


&НаСервере
Функция ПроверкаНаОтличиеНомеровПриказа()
	ОтказПриСовпадении = Ложь;
	Если Объект.ПриказСПродлением = Ложь Тогда 
		Для Каждого Стр из Объект.ВыбранныеПриказы Цикл
			
			Если Не Стр.НазваниеКомандировки.НомерПриказа = Объект.НомерПриказа И Не Объект.НомерПриказа = "" 
				И Не Стр.НазваниеКомандировки.НомерПриказа = "" Тогда 
				Сообщить("Есть командировочные на продление, необходимо убрать командировочную с другим номером приказа!!!");
				
				ОтказПриСовпадении = Истина;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	Возврат ОтказПриСовпадении;
КонецФункции


&НаСервере
Процедура РаботаСТаблицамиПриказа()
	Для Каждого Стр из Объект.ВыбранныеПриказы Цикл
		Если Не Стр.НазваниеКомандировки = Документы.КомандировочноеУдостоверение.ПустаяСсылка() Тогда
			ДокСсылка = Стр.НазваниеКомандировки;
			ДокОбъект = ДокСсылка.ПолучитьОбъект();
			Если ДокСсылка.НомерПриказа = НомерПриказаДляИзменения Тогда
				ДокОбъект.НомерПриказа = Объект.НомерПриказа;
				ДокОбъект.ДатаПриказа = Объект.ДатаПриказа;
			КонецЕсли;		 	
			ДокОбъект.Записать();
		КонецЕсли
	КонецЦикла;
	Для Каждого СтрЗ из ЗаписнаяТаблица Цикл
		Если Не СтрЗ.НазваниеКоманд = Документы.КомандировочноеУдостоверение.ПустаяСсылка() Тогда
			ДокСсылка = СтрЗ.НазваниеКоманд;
			ДокОбъект = ДокСсылка.ПолучитьОбъект();
			Если ДокОбъект.НомерПриказа = Объект.НомерПриказа  ТОгда
				ДокОбъект.НомерПриказа = "";
				ДокОбъект.ДатаПриказа = Дата(1,1,1,0,0,0);
			КонецЕсли;
			ДокОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	Если Объект.ПриказСПродлением = Ложь Тогда 
		ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"НомерПриказа", "", ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);	
	КонецЕсли;
	НомерПриказаДляИзменения = Объект.НомерПриказа;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НомерПриказаДляИзменения = Объект.НомерПриказа;
	
	КлиентПользователя = "";
	ПолучитьКлиентПользователя(КлиентПользователя);
	
	Если КлиентПользователя = "Веб-клиент" Тогда
		Элементы.ПечатьКомандировки.Видимость = Ложь;
		Элементы.ВыбранныеПриказыСформироватьПриказ.Видимость = Ложь;
	КонецЕсли; 
	
	Если Объект.Проведен = Истина Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.ПодписываетПриказ = Справочники.Сотрудники.ПустаяСсылка() Тогда 
		Объект.ПодписываетПриказ = Справочники.Сотрудники.НайтиПоРеквизиту("Должность",Справочники.Должности.НайтиПоНаименованию("Директор"));
	КонецЕсли;
	
	Если Не Объект.Номер = "" И Объект.НомерПриказа = "" Тогда 
		Объект.НомерПриказа = СокрЛП(Объект.Номер) + "/К";
	КонецЕсли;
	
	Если Объект.ПриказСПродлением = Ложь Тогда 
		ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"НомерПриказа", "", ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
		ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"ПометкаУдаления", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
	КонецЕсли;

	МассивДляВыбора = Новый Массив();
	МассивДляВыбора.Добавить(Справочники.Должности.НайтиПоНаименованию("Директор"));
	МассивДляВыбора.Добавить(Справочники.Должности.НайтиПоНаименованию("Первый заместитель директора - главный инженер"));
	
	МасПарам = Новый Массив();
	МасПарам.Добавить(Новый ПараметрВыбора("Отбор.Должность", МассивДляВыбора));
	ФиксМасс = Новый ФиксированныйМассив(МасПарам);
	
	Элементы.ПодписываетПриказ.ПараметрыВыбора = ФиксМасс;
	ВыбранныеПриказыСчитатьРабочимоДнямиПриИзмененииНаСервере();
	ПриказСПродлениемПриИзмененииНаСервере();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СуточнаяВыплатаВодителю.Сумма КАК Сумма
		|ИЗ
		|	РегистрСведений.СуточнаяВыплатаВодителю КАК СуточнаяВыплатаВодителю";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КонецЦикла;
	
	Если Объект.СуточнаяНормаВыплатВодителю = 0 Тогда
		
		Объект.СуточнаяНормаВыплатВодителю = ВыборкаДетальныеЗаписи.Сумма;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПриказыПередУдалением(Элемент, Отказ)
УдалитьКомандировочнуюНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьКомандировочнуюНаСервере()
	ТаблицаЗаписи = ЗаписнаяТаблица.Добавить();
	Для Каждого СтрокаВыбора Из Элементы.ВыбранныеПриказы.ВыделенныеСтроки Цикл
		НайтиОбъектВыбранныеВПриказ = Объект.ВыбранныеПриказы.НайтиПоИдентификатору(СтрокаВыбора);
		ТаблицаЗаписи.НазваниеКоманд = НайтиОбъектВыбранныеВПриказ.НазваниеКомандировки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОтборДляТабличнойЧасти()
	ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"НомерПриказа", "", ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаписнаяТаблица.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.НомерПриказа = "" И Объект.ДатаПриказа = Дата(1,1,1,0,0,0) Тогда
		Объект.НомерПриказа = СокрЛП(Объект.Номер) + "/К";
		Объект.ДатаПриказа = Объект.Дата;
		Записать();
	КонецЕсли;

	
	Для Каждого Ключ Из ПараметрыЗаписи Цикл
		ЗначениеПараметраЗаписи = Ключ.Значение;
	КонецЦикла;
	
	Если ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("ДокументСсылка.КомандировочноеУдостоверение"));

КонецПроцедуры

&НаКлиенте
Процедура ПечататьКомандировку(Команда)

	ВыбранКомандировка = Элементы.ВыбранныеПриказы.ТекущиеДанные.НазваниеКомандировки;
	
	Если ПроверкаПередПечать(ВыбранКомандировка) Тогда
		
		ПараметрыПолей = ПараметрыПолейНаСервереКоманд(ВыбранКомандировка); 
		Результат = УправлениеПечатьюСервер.ПечататьКомандировкуСоло(ПараметрыПолей);
		УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);

	Иначе 
		
		ПараметрыПолей = ПараметрыПолейНаСервереКоманд(ВыбранКомандировка);
		ПараметрыТаблиц = ПараметрыТаблицНаСервереКоманд(ВыбранКомандировка);
		
		Результат = УправлениеПечатьюСервер.ПечататьКомандировку(ПараметрыПолей, ПараметрыТаблиц);
		УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция  ПроверкаПередПечать(ВыбранКомандировка)

	ПроверкаОдинИли = Ложь;
	
	Если ВыбранКомандировка.ГруппаРаботников.Количество() = 1 Тогда
		
		ПроверкаОдинИли = Истина;
		
	КонецЕсли;
	Возврат ПроверкаОдинИли;
КонецФункции

&НаСервере 
Функция  ПараметрыПолейНаСервереКоманд(ВыбраннаяКоманди)
	
	ПарметрыПолей = Новый Структура;
	ПарметрыПолей.Вставить("номер", ВыбраннаяКоманди.Номер);
	ПарметрыПолей.Вставить("дата", Формат(ВыбраннаяКоманди.Дата, "ДФ=dd.MM.yyyy"));
	ПарметрыПолей.Вставить("КудаКомандировать", ВыбраннаяКоманди.КудаКомандировать);
	ПарметрыПолей.Вставить("НачалоКомандировки", ВыбраннаяКоманди.НачалоКомандировки);
	ПарметрыПолей.Вставить("ОкончаниеКомандировки", ВыбраннаяКоманди.ОкончаниеКомандировки);
	
	ПарметрыПолей.Вставить("НомерПриказа", ВыбраннаяКоманди.НомерПриказа);
	Если ВыбраннаяКоманди.ДатаПриказа = Дата(1,1,1,0,0,0) Тогда
		ПарметрыПолей.Вставить("ДатаПриказа", "          ");
	Иначе
	ПарметрыПолей.Вставить("ДатаПриказа", ВыбраннаяКоманди.ДатаПриказа);
	КонецЕсли;

	
	
	ПарметрыПолей.Вставить("Подразделение", ВыбраннаяКоманди.Подразделение.Наименование);
	ПарметрыПолей.Вставить("Руководитель", ВыбраннаяКоманди.Руководитель.Наименование);
	ПарметрыПолей.Вставить("РуководительДолжность", ВыбраннаяКоманди.Руководитель.Должность.Наименование);
	ПарметрыПолей.Вставить("КоДн", ВыбраннаяКоманди.КоличествоДней);
	
	МассивДней = ПолучитьСклоненияСтрокиПоЧислу("день", ВыбраннаяКоманди.КоличествоДней,,,"ПД=Именительный");
	Пробел = Найти(МассивДней[0]," ");
	Если Пробел > 0 Тогда
		ИскомаяСтрока = Сред(МассивДней[0],Пробел + 1);
	Иначе
		ИскомаяСтрока = МассивДней[0];
	КонецЕсли;
	ПарметрыПолей.Вставить("День", ИскомаяСтрока);
	
	Строка = СтрДлина(ВыбраннаяКоманди.ЦельКомандировки.ПолноеНаименование);
	ПробелФ = СтрНайти(ВыбраннаяКоманди.ЦельКомандировки.ПолноеНаименование," ",НаправлениеПоиска.СКонца);
	
	
	ПарметрыПолей.Вставить("Составитель", ВыбраннаяКоманди.Составитель.Наименование);
	ПарметрыПолей.Вставить("Составитель0", ВыбраннаяКоманди.Составитель.Наименование);
	ПарметрыПолей.Вставить("СоставительДолжность", ВыбраннаяКоманди.Составитель.Должность.Наименование);
	

	ТекстДляВорд = ВыбраннаяКоманди.ЦельКомандировки.ПолноеНаименование;
	
	КоличествоСимволов = 95;		
	НомерПервогоСимволаСтрокиПоиска = 95;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 95 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
	Иначе
		КоличествоСимволовВСтроке = 95;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		ПарметрыПолей.Вставить("ЦельКомандировки1" + К, ТекстВставки);
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	
	ПарметрыПолей.Вставить("ВыдалЗадание", ВыбраннаяКоманди.ВыдалЗадание.Наименование);
	ПарметрыПолей.Вставить("ВыдалЗаданиеДолжность", ВыбраннаяКоманди.ВыдалЗадание.Должность.Наименование);
	
ТекстДляВорд = ВыбраннаяКоманди.ЦельКомандировки;
	
	КоличествоСимволов = 95;		
	НомерПервогоСимволаСтрокиПоиска = 95;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 95 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
		КоличествоСимволовВСтроке = 95;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		
		ПарметрыПолей.Вставить("ЦельКомандировки" + К, ТекстВставки);
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	
	ПарметрыПолей.Вставить("Д", Формат(ВыбраннаяКоманди.НачалоКомандировки,"ДФ=дд"));
	ПарметрыПолей.Вставить("М", Сред(Формат(ВыбраннаяКоманди.НачалоКомандировки,"ДФ=ддММММ"), 3));
	ПарметрыПолей.Вставить("Г", Формат(ВыбраннаяКоманди.НачалоКомандировки,"ДФ=гггг"));	
	
	Возврат ПарметрыПолей;
КонецФункции

&НаСервере
Функция ПараметрыТаблицНаСервереКоманд(ВыбраннаяКоманди)
	ПараметрыТаблиц = Новый Структура();
	ПараметрыТаблиц.Вставить("ГруппаРаботников",ПоместитьВоВременноеХранилище(ВыбраннаяКоманди.ГруппаРаботников.Выгрузить(),ЭтаФорма.УникальныйИдентификатор));
	
	Возврат ПараметрыТаблиц;
КонецФункции

&НаКлиенте
Процедура РаспечататьВсеКомандировочные(Команда)
		ВыборВсех = Объект.ВыбранныеПриказы;
	Для каждого ТекуЗнач из ВыборВсех Цикл
		ВыбранКомандировка = ТекуЗнач.НазваниеКомандировки;
		Если ПроверкаПередПечать(ВыбранКомандировка) Тогда
			
			ПараметрыПолей = ПараметрыПолейНаСервереКоманд(ВыбранКомандировка); 
			Результат = УправлениеПечатьюСервер.ПечататьКомандировкуСоло(ПараметрыПолей);
			УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);
			
		Иначе 
			
			ПараметрыПолей = ПараметрыПолейНаСервереКоманд(ВыбранКомандировка);
			ПараметрыТаблиц = ПараметрыТаблицНаСервереКоманд(ВыбранКомандировка);
			
			Результат = УправлениеПечатьюСервер.ПечататьКомандировку(ПараметрыПолей, ПараметрыТаблиц);
			УправлениеПечатьюКлиентСервер.ДокументПоказать(Результат,3);
			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура НомерПриИзмененииНаСервере()
		Объект.НомерПриказа = Объект.Номер + "/К";
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	НомерПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПечататьКомандировкуНаВебКлиенте(Команда)
	НазваниеДокумента = "Командировочное удостоверение и Авансовый отчет";
	
	ВыбранКомандировка = Элементы.ВыбранныеПриказы.ТекущиеДанные.НазваниеКомандировки;;

	Если ПроверкаПередПечать(ВыбранКомандировка) Тогда
		ТаблДок = ПечатьКомандировкиДляОдногоНаСервере(ВыбранКомандировка);
	Иначе
		ТаблДок = ПечатьКомандировкиНаСервере(ВыбранКомандировка);
	КонецЕсли;
	ТаблДок.ОтображатьСетку = Ложь;
	//ТаблДок.Защита = Истина;
	ТаблДок.АвтоМасштаб = Истина;
	ТаблДок.ТолькоПросмотр = Истина;
	ТаблДок.ОтображатьЗаголовки = Ложь;
	ТаблДок.АвтоМасштаб=ложь; 	
	ТаблДок.МасштабПечати = 100;
	ТаблДок.ПолеСлева=15;
	ТаблДок.Показать(НазваниеДокумента);
	
КонецПроцедуры

&НаСервере
Функция ПечатьКомандировкиНаСервере(ВыбранКомандировка)
	
	СсылкаКоманди = ВыбранКомандировка;

	
	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.КомандировочноеУдостоверение.ПолучитьМакет("КомандировочноеУдостоверениеИКоллективныйАвансовыйОтчет");
	ПервыйЛист1 = Макет.ПолучитьОбласть("Лист11");
	ПервыйЛист2 = Макет.ПолучитьОбласть("Лист12");

	ТаблСотр = Макет.ПолучитьОбласть("ТаблСотруд");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверение.Ссылка КАК Ссылка,
		|	КомандировочноеУдостоверение.Номер КАК Номер,
		|	КомандировочноеУдостоверение.Дата КАК Дата,
		|	КомандировочноеУдостоверение.КудаКомандировать КАК КудаКомандировать,
		|	КомандировочноеУдостоверение.НачалоКомандировки КАК НачалоКомандировки,
		|	КомандировочноеУдостоверение.ОкончаниеКомандировки КАК ОкончаниеКомандировки,
		|	КомандировочноеУдостоверение.ЦельКомандировки КАК ЦельКомандировки,
		|	КомандировочноеУдостоверение.Подразделение КАК Подразделение,
		|	КомандировочноеУдостоверение.ВыдалЗадание КАК ВыдалЗадание,
		|	КомандировочноеУдостоверение.Составитель КАК Составитель,
		|	КомандировочноеУдостоверение.КоличествоДней КАК КоличествоДней,
		|	КомандировочноеУдостоверение.Руководитель КАК Руководитель,
		|	КомандировочноеУдостоверение.НомерПриказа КАК НомерПриказа,
		|	КомандировочноеУдостоверение.ДатаПриказа КАК ДатаПриказа
		|ИЗ
		|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	    Запрос.УстановитьПараметр("Ссылка", СсылкаКоманди);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	КомандИнфо = ВыборкаДетальныеЗаписи;
	КонецЕсли;
	
	ПервыйЛист1.Параметры.Номер = КомандИнфо.Номер;
	ПервыйЛист1.Параметры.Дата = Формат(КомандИнфо.Дата,"ДФ=dd.MM.yyyy");
	ПервыйЛист1.Параметры.Подразделение = КомандИнфо.Подразделение;
	ТаблДок.Вывести(ПервыйЛист1);
	
	Шапка1 = Макет.ПолучитьОбласть("ШапкаСотрудникПервыйЛист");

	Шапка1.Область("ШапкаСотрудникПервыйЛист").ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	
	ТаблДок.Вывести(Шапка1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверениеГруппаРаботников.НомерСтроки КАК НомерСтроки,
		|	КомандировочноеУдостоверениеГруппаРаботников.ФИОполное КАК ФИОполное,
		|	КомандировочноеУдостоверениеГруппаРаботников.Примечание КАК Примечание
		|ИЗ
		|	Документ.КомандировочноеУдостоверение.ГруппаРаботников КАК КомандировочноеУдостоверениеГруппаРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|		ПО КомандировочноеУдостоверениеГруппаРаботников.Ссылка = КомандировочноеУдостоверение.Ссылка
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	      Запрос.УстановитьПараметр("Ссылка", СсылкаКоманди);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТаблСотр.Параметры.Ном = ВыборкаДетальныеЗаписи.НомерСтроки;
		ТаблСотр.Параметры.ФИОПолн = ВыборкаДетальныеЗаписи.ФИОполное.ПолноеНаименование;
		ТаблСотр.Параметры.Долж = ВыборкаДетальныеЗаписи.ФИОполное.Должность;
		ТаблСотр.Параметры.Примич = ВыборкаДетальныеЗаписи.Примечание;
		ТаблДок.Вывести(ТаблСотр);
	КонецЦикла;
	
	ПервыйЛист2.Параметры.КудаКомандировать = КомандИнфо.КудаКомандировать;
	ПервыйЛист2.Параметры.День = ПолучитьСклоненияСтрокиПоЧислу("день", КомандИнфо.КоличествоДней,,,"ПД=Именительный")[0];
	ПервыйЛист2.Параметры.НачалоКомандировки = Формат(КомандИнфо.НачалоКомандировки,"ДЛФ=DD");
	ПервыйЛист2.Параметры.ОкончаниеКомандировки = Формат(КомандИнфо.ОкончаниеКомандировки,"ДЛФ=DD");
	ПервыйЛист2.Параметры.ЦельКомандировки01 = Врег(Лев(КомандИнфо.ЦельКомандировки.ПолноеНаименование,1)) + Сред(КомандИнфо.ЦельКомандировки.ПолноеНаименование,2);
	ПервыйЛист2.Параметры.НомерПриказа = КомандИнфо.НомерПриказа;
	ПервыйЛист2.Параметры.ДатаПриказа = Формат(КомандИнфо.ДатаПриказа,"ДФ=dd.MM.yyyy");
	ПервыйЛист2.Параметры.РуководительДолжность = КомандИнфо.Руководитель.Должность;
	ПервыйЛист2.Параметры.Руководитель = КомандИнфо.Руководитель;
	ПервыйЛист2.Параметры.Д = Формат(КомандИнфо.НачалоКомандировки,"ДФ=дд");
	ПервыйЛист2.Параметры.М = Сред(Формат(КомандИнфо.НачалоКомандировки,"ДФ=ддММММ"), 3);
	ПервыйЛист2.Параметры.Г = Формат(КомандИнфо.НачалоКомандировки,"ДФ=гггг");
	ТаблДок.Вывести(ПервыйЛист2);

	ТаблДок.ВывестиГоризонтальныйРазделительСтраниц();

	
	ВторойЛист1 = Макет.ПолучитьОбласть("Лист21");
	ВторойЛист2 = Макет.ПолучитьОбласть("Лист22");
	ШапкаТаб2 = Макет.ПолучитьОбласть("ШапкаТаблСотруд1");
	ТаблСотр2 = Макет.ПолучитьОбласть("ФИОПолнСотр");
	ПодвалТабл = Макет.ПолучитьОбласть("ПодвалСотр");
	
	ТаблДок.Вывести(ВторойЛист1);
	ТаблДок.Вывести(ШапкаТаб2);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверениеГруппаРаботников.НомерСтроки КАК НомерСтроки,
		|	КомандировочноеУдостоверениеГруппаРаботников.ФИОполное КАК ФИОполное
		|ИЗ
		|	Документ.КомандировочноеУдостоверение.ГруппаРаботников КАК КомандировочноеУдостоверениеГруппаРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|		ПО КомандировочноеУдостоверениеГруппаРаботников.Ссылка = КомандировочноеУдостоверение.Ссылка
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	      Запрос.УстановитьПараметр("Ссылка", СсылкаКоманди);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТаблСотр2.Параметры.Номер = ВыборкаДетальныеЗаписи.НомерСтроки;
		ТаблСотр2.Параметры.ФИОПолн = ВыборкаДетальныеЗаписи.ФИОполное.Наименование; 	
		ТаблДок.Вывести(ТаблСотр2);
	КонецЦикла;
	ТаблДок.Вывести(ПодвалТабл);

	ВторойЛист2.Параметры.СоставительДолжность = КомандИнфо.Составитель.Должность;
	ВторойЛист2.Параметры.Составитель = КомандИнфо.Составитель.Наименование;
	
	ТекстДляВорд = Врег(Лев(КомандИнфо.ЦельКомандировки.ПолноеНаименование,1)) + Сред(КомандИнфо.ЦельКомандировки.ПолноеНаименование,2);
	
	КоличествоСимволов = 105;		
	НомерПервогоСимволаСтрокиПоиска = 105;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 105 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
		КоличествоСимволовВСтроке = 105;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		Если К = 0 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки0 = ТекстВставки;
		ИначеЕсли К = 1 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки1 = ТекстВставки;
		ИначеЕсли К = 2 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки2 = ТекстВставки;
		ИначеЕсли К = 3 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки3 = ТекстВставки;
		ИначеЕсли К = 4 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки4 = ТекстВставки;			
		ИначеЕсли К = 5 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки5 = ТекстВставки;			
		ИначеЕсли К = 6 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки6 = ТекстВставки;			
		ИначеЕсли К = 7 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки7 = ТекстВставки;
		ИначеЕсли К = 8 Тогда
			ВторойЛист2.Параметры.ЦельКомандировки8 = ТекстВставки;
		КонецЕсли;
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	ВторойЛист2.Параметры.ВыдалЗаданиеДолжность = КомандИнфо.ВыдалЗадание.Должность;
	ВторойЛист2.Параметры.ВыдалЗадание = КомандИнфо.ВыдалЗадание.Наименование;
	ТаблДок.Вывести(ВторойЛист2);

	
Возврат ТаблДок;
	
КонецФункции

&НаСервере
Функция ПечатьКомандировкиДляОдногоНаСервере(ВыбранКомандировка)
	
	СсылкаКоманди = ВыбранКомандировка;

	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.КомандировочноеУдостоверение.ПолучитьМакет("КомандировачныйЛистДляОдного");
	Лист1 = Макет.ПолучитьОбласть("Лист1");
	Лист2 = Макет.ПолучитьОбласть("Лист2");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверение.Ссылка КАК Ссылка,
		|	КомандировочноеУдостоверение.Номер КАК Номер,
		|	КомандировочноеУдостоверение.Дата КАК Дата,
		|	КомандировочноеУдостоверение.КудаКомандировать КАК КудаКомандировать,
		|	КомандировочноеУдостоверение.НачалоКомандировки КАК НачалоКомандировки,
		|	КомандировочноеУдостоверение.ОкончаниеКомандировки КАК ОкончаниеКомандировки,
		|	КомандировочноеУдостоверение.ЦельКомандировки КАК ЦельКомандировки,
		|	КомандировочноеУдостоверение.Подразделение КАК Подразделение,
		|	КомандировочноеУдостоверение.ВыдалЗадание КАК ВыдалЗадание,
		|	КомандировочноеУдостоверение.Составитель КАК Составитель,
		|	КомандировочноеУдостоверение.КоличествоДней КАК КоличествоДней,
		|	КомандировочноеУдостоверение.Руководитель КАК Руководитель,
		|	КомандировочноеУдостоверение.НомерПриказа КАК НомерПриказа,
		|	КомандировочноеУдостоверение.ДатаПриказа КАК ДатаПриказа
		|ИЗ
		|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|ГДЕ
		|	КомандировочноеУдостоверение.Ссылка = &Ссылка";
	    Запрос.УстановитьПараметр("Ссылка", СсылкаКоманди);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	КомандИнфо = ВыборкаДетальныеЗаписи;
	КонецЕсли;
	
	Лист1.Параметры.НОМЕР = КомандИнфо.Номер;
	Лист1.Параметры.ДАТА = Формат(КомандИнфо.Дата,"ДФ=dd.MM.yyyy");
		
	Лист1.Параметры.КудаКомандировать = КомандИнфо.КудаКомандировать;
	Лист1.Параметры.КоДн = ПолучитьСклоненияСтрокиПоЧислу("день", КомандИнфо.КоличествоДней,,,"ПД=Именительный")[0];
	Лист1.Параметры.Д = Формат(КомандИнфо.НачалоКомандировки,"ДФ=дд");
	Лист1.Параметры.М = Сред(Формат(КомандИнфо.НачалоКомандировки,"ДФ=ддММММ"), 3);
	Лист1.Параметры.Г = Формат(КомандИнфо.НачалоКомандировки,"ДФ=гггг");

	
	Лист1.Параметры.НачалоКомандировки = Формат(КомандИнфо.НачалоКомандировки,"ДФ=dd.MM.yyyy");
	
	Лист1.Параметры.ОкончаниеКомандировки = Формат(КомандИнфо.ОкончаниеКомандировки,"ДФ=dd.MM.yyyy");
	
	
	Лист1.Параметры.НомерПриказа = КомандИнфо.НомерПриказа;
	Лист1.Параметры.ДатаПриказа = Формат(КомандИнфо.ДатаПриказа,"ДФ=dd.MM.yyyy");
	Лист1.Параметры.РуководительДолжность = КомандИнфо.Руководитель.Должность;
	Лист1.Параметры.Руководитель = КомандИнфо.Руководитель;
	
	Лист1.Параметры.СоставительДолжность = КомандИнфо.Составитель.Должность;
	Лист1.Параметры.Составитель = КомандИнфо.Составитель.ПолноеНаименование;
	Лист1.Параметры.Составитель0 = КомандИнфо.Составитель.Наименование;
	
	
	ТаблДок.Вывести(Лист1);
	
	ТаблДок.ВывестиГоризонтальныйРазделительСтраниц();
		

	ТекстДляВорд = Врег(Лев(КомандИнфо.ЦельКомандировки.ПолноеНаименование,1)) + Сред(КомандИнфо.ЦельКомандировки.ПолноеНаименование,2);
	
	КоличествоСимволов = 100;		
	НомерПервогоСимволаСтрокиПоиска = 100;
	НомерПервогоСимволаСтроки = 0;
	ДлинаВсейСтр = СтрДлина(ТекстДляВорд);

	Для К = 0 По 8 Цикл
	    ТекстДляВордРед = Сред(ТекстДляВорд, НомерПервогоСимволаСтроки, КоличествоСимволов);
		Кол = СтрДлина(ТекстДляВордРед);
		Если Кол = 100 Тогда
		КоличествоСимволовВСтроке = СтрНайти(ТекстДляВордРед, " ", НаправлениеПоиска.СКонца, Кол);
		Иначе
		КоличествоСимволовВСтроке = 100;
		КонецЕсли;
		Если Кол < КоличествоСимволов И Не КоличествоСимволовВСтроке = 0 Тогда 
			
			ТекстВставки = ТекстДляВордРед;
			
		Иначе
			
			ТекстВставки = Сред(ТекстДляВордРед, 0, КоличествоСимволовВСтроке);
			
		КонецЕсли;
		Если К = 0 Тогда
			Лист2.Параметры.ЦельКомандировки0 = ТекстВставки;
		ИначеЕсли К = 1 Тогда
			Лист2.Параметры.ЦельКомандировки1 = ТекстВставки;
		ИначеЕсли К = 2 Тогда
			Лист2.Параметры.ЦельКомандировки2 = ТекстВставки;
		ИначеЕсли К = 3 Тогда
			Лист2.Параметры.ЦельКомандировки3 = ТекстВставки;
		ИначеЕсли К = 4 Тогда
			Лист2.Параметры.ЦельКомандировки4 = ТекстВставки;			
		ИначеЕсли К = 5 Тогда
			Лист2.Параметры.ЦельКомандировки5 = ТекстВставки;			
		ИначеЕсли К = 6 Тогда
			Лист2.Параметры.ЦельКомандировки6 = ТекстВставки;			
		ИначеЕсли К = 7 Тогда
			Лист2.Параметры.ЦельКомандировки7 = ТекстВставки;
		ИначеЕсли К = 8 Тогда
			Лист2.Параметры.ЦельКомандировки8 = ТекстВставки;
		КонецЕсли;
		
		НомерПервогоСимволаСтрокиПоиска = КоличествоСимволовВСтроке + НомерПервогоСимволаСтрокиПоиска;

		НомерПервогоСимволаСтроки = НомерПервогоСимволаСтроки + КоличествоСимволовВСтроке;
		
 	КонецЦикла;

	Лист2.Параметры.ВыдалЗаданиеДолжность = КомандИнфо.ВыдалЗадание.Должность;
	Лист2.Параметры.ВыдалЗадание = КомандИнфо.ВыдалЗадание.Наименование;
	ТаблДок.Вывести(Лист2);

	
Возврат ТаблДок;
	
КонецФункции


&НаСервере
Функция ПолучитьКлиентПользователя(ИмяПриложения)
	НомерСоединения  = НомерСоединенияИнформационнойБазы();
	
	СеансыИБ = ПолучитьСеансыИнформационнойБазы();        
    Для Каждого Сеанс Из СеансыИБ Цикл         
        Если Сеанс.НомерСоединения = НомерСоединения Тогда
				ИмяПриложения = ПредставлениеПриложения(Сеанс.ИмяПриложения); 
        КонецЕсли;   
    КонецЦикла;
	Возврат ИмяПриложения;
КонецФункции

&НаСервере
Функция ПечатьКомандировочнойНаСервере()
	НуднаяКомандировка = Элементы.ВыбранныеПриказы.ВыделенныеСтроки;
	Для Каждого СтрКом Из НуднаяКомандировка Цикл
		СсылкаКоманди = СтрКом;
	КонецЦикла;
	Проверка = Ложь;
	Если СсылкаКоманди.ГруппаРаботников.Количество() = 1 Тогда
		Проверка = Истина;
	КонецЕсли;
	
	Возврат Проверка;
	
КонецФункции

&НаКлиенте
Процедура РаспечататьВсеКомандировочныеНаВебКлиенте(Команда)
	НазваниеДокумента = "Командировочное удостоверение и Авансовый отчет";
	
	ВыборВсех = Объект.ВыбранныеПриказы;
	Для каждого ТекуЗнач из ВыборВсех Цикл
		ВыбранКомандировка = ТекуЗнач.НазваниеКомандировки;
		Если ПроверкаПередПечать(ВыбранКомандировка) Тогда
			ТаблДок = ПечатьКомандировкиДляОдногоНаСервере(ВыбранКомандировка);
		Иначе
			ТаблДок = ПечатьКомандировкиНаСервере(ВыбранКомандировка);
		КонецЕсли;
		ТаблДок.ОтображатьСетку = Ложь;
		//ТаблДок.Защита = Истина;
		ТаблДок.АвтоМасштаб = Истина;
		ТаблДок.ТолькоПросмотр = Истина;
		ТаблДок.ОтображатьЗаголовки = Ложь;
		ТаблДок.АвтоМасштаб=ложь; 	
		ТаблДок.МасштабПечати = 100;
		ТаблДок.ПолеСлева=15;
		ТаблДок.Показать(НазваниеДокумента);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПечатьПриказ(Команда)
	ТаблДок = ПечатьПриказаНаСервере();
	ТаблДок.ОтображатьСетку = Ложь;
	ТаблДок.АвтоМасштаб = Истина;
	ТаблДок.ТолькоПросмотр = Истина;
	ТаблДок.МасштабПечати = 100;
	ТаблДок.ПолеСлева=15;
	ТаблДок.ОтображатьЗаголовки = Ложь; 
	ТаблДок.Показать("Приказ");
КонецПроцедуры

&НаСервере
Функция ПечатьПриказаНаСервере()
	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.ПриказКомандировки.ПолучитьМакет("Приказ");
	Шапка = Макет.ПолучитьОбласть("ЗаголовокПриказа");
	
	ТекстНомераПриказа = Формат(Объект.ДатаПриказа, "ДФ=dd.MM.yyyy")+ "г. № "+Объект.НомерПриказа;

	Шапка.Параметры.НомерПриказа0 = ТекстНомераПриказа;
	ТаблДок.Вывести(Шапка);
	ТекстПриказ = Макет.ПолучитьОбласть("ОсновнойТекст");
	
	Кол = Объект.ВыбранныеПриказы.Количество();
	СтрокаПриказКаманд = "";
	СтрокаСотрудник = "";
	СтрокаСВодителем = "";
	итерТекст = 1;
	итерОбзац = 1;
	итерКо = 0;
	итерСо = 0;	
	КолВоди = 0;
	
	
	Пока итерКо < Кол цикл
		
		Командир = Объект.ВыбранныеПриказы[итерКо].НазваниеКомандировки;
		колСо = Командир.ГруппаРаботников.Количество();
		Пока итерСо < колСо Цикл
			
			пол = "ПЛ=Мужской";
			ПолПоОтчеству = Прав(СокрП(Командир.ГруппаРаботников[итерСо].ФИОполное.ПолноеНаименование),2);
			Если ПолПоОтчеству = "ич" Тогда
				Пол = "ПЛ=Мужской";
			ИначеЕсли ПолПоОтчеству = "на" Тогда
				Пол = "ПЛ=Женский";
			КонецЕсли;
			
			КоличествоСклонений = ПолучитьСклоненияСтроки(Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,Пол,"ПД=Винительный").Количество();
			НомерПриСклонении = 0;
			Если КоличествоСклонений > 1 Тогда
				НомерПриСклонении = 1;
			КонецЕсли;
			
			парам = "" + ПолучитьСклоненияСтроки(Нрег(Командир.ГруппаРаботников[итерСо].ФИОполное.Должность),Пол,"ПД=Винительный")[0] + " " + ПолучитьСклоненияСтроки(Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,Пол,"ПД=Винительный")[НомерПриСклонении] ;
			ПоискВодитель =Найти(парам, "водите");
			Если ПоискВодитель > 0 Тогда
				СтрокаСВодителем = ПолучитьСклоненияСтроки( Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,,"ПД=Дательный")[НомерПриСклонении];
				КолВоди = КолВоди +1;
			КонецЕсли;
			СтрокаСотрудник = СтрокаСотрудник + парам + ", ";               
			//+ ПолучитьСклоненияСтроки( "Серышев Н.В.",,"ПД=Винительный")[0] + ", ";
			итерСо = итерСо + 1;	
		КонецЦикла;
		
		СтрокаСотрудник = Лев(СтрокаСотрудник,СтрДлина(СтрокаСотрудник)-2);
		
		Командир = Объект.ВыбранныеПриказы[итерКо].НазваниеКомандировки;
		
		ТекстВступления = "";
		ТекстПодежаОтВида = "";
		Если Не Объект.НомерПриказа = Командир.НомерПриказа Тогда
			
			ТекстВступления = "Продлить командировку (приказ о командировании " + Командир.НомерПриказа +" от " + Формат(Командир.ДатаПриказа, "ДЛФ=DD")  + ") ";
			ТекстПодежаОтВида = "ПД=Дательный";
		Иначе 
		    ТекстВступления = "Командировать " ;
			ТекстПодежаОтВида = "ПД=Винительный";
		КонецЕсли;
		
		колСо = Командир.ГруппаРаботников.Количество();
		Пока итерСо < колСо Цикл

			пол = "ПЛ=Мужской";
			ПолПоОтчеству = Прав(СокрП(Командир.ГруппаРаботников[итерСо].ФИОполное.ПолноеНаименование),2);
			Если ПолПоОтчеству = "ич" Тогда
				Пол = "ПЛ=Мужской";
			ИначеЕсли ПолПоОтчеству = "на" Тогда
				Пол = "ПЛ=Женский";
			КонецЕсли;
			
			КоличествоСклонений = ПолучитьСклоненияСтроки(Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,Пол,ТекстПодежаОтВида).Количество();
			НомерПриСклонении = 0;
			Если КоличествоСклонений > 1 Тогда
				НомерПриСклонении = 1;
			КонецЕсли;
			
			парам = "" + ПолучитьСклоненияСтроки(Нрег(Командир.ГруппаРаботников[итерСо].ФИОполное.Должность),Пол,ТекстПодежаОтВида)[0] + " " + ПолучитьСклоненияСтроки(Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,Пол,ТекстПодежаОтВида)[НомерПриСклонении] ;
			ПоискВодитель =Найти(парам, "водите");
			Если ПоискВодитель > 0 Тогда
				СтрокаСВодителем = ПолучитьСклоненияСтроки( Командир.ГруппаРаботников[итерСо].ФИОполное.Наименование,,"ПД=Дательный")[НомерПриСклонении];
				КолВоди = КолВоди + 1;
			КонецЕсли;
			СтрокаСотрудник = СтрокаСотрудник + парам + ", ";               
			итерСо = итерСо + 1;	
		КонецЦикла;
		
		СтрокаСотрудник = Лев(СтрокаСотрудник,СтрДлина(СтрокаСотрудник)-2);
		
		Позиция = Найти(СтрокаСотрудник, "Водителя");
		ТекстНачалаИОкончанияКомандировки = "";
		
		Если Командир.НомерПриказа = Объект.НомерПриказа Тогда 
			КоличествоДнейПриПродлениии = Командир.КоличествоДней;
			
			Если Командир.КоличествоДней = 1 тогда
				ТекстНачалаИОкончанияКомандировки = " " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			ИначеЕсли НачалоМесяца(Командир.НачалоКомандировки) = НачалоМесяца(Командир.ОкончаниеКомандировки)  Тогда 
				ТекстНачалаИОкончанияКомандировки = " с " + Формат(Командир.НачалоКомандировки, "ДФ=дд") + " по " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			ИначеЕсли НачалоГода(Командир.НачалоКомандировки) = НачалоГода(Командир.ОкончаниеКомандировки)  Тогда 
				ТекстНачалаИОкончанияКомандировки = " с " + Формат(Командир.НачалоКомандировки, "ДФ='дд ММММ'; ДЛФ=DD") + " по " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			Иначе
				ТекстНачалаИОкончанияКомандировки = " с " + Формат(Командир.НачалоКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г." + " по " + Формат(Командир.ОкончаниеКомандировки, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			КонецЕсли;
		Иначе 
			
			
			КоДнДляМод = ((Командир.ОкончаниеКомандировки - Объект.ВыбранныеПриказы[итерКо].ПродлениеПоДату)/86400); 
			КоличествоДнейПриПродлениии = Макс(КоДнДляМод,-КоДнДляМод);
			
			ТекстНачалаИОкончанияКомандировки = " по " + Формат(Объект.ВыбранныеПриказы[итерКо].ПродлениеПоДату, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
			
		КонецЕсли;
		
		Если Объект.ВыбранныеПриказы[итерКо].ВОднодневнуюКомандировку = Истина Тогда 
			КомандироватьВОднодневную = "в однодневную командировку ";
		ИначеЕсли Объект.ВыбранныеПриказы[итерКо].ВОднодневнуюКомандировку = Ложь Тогда
			КомандироватьВОднодневную = "";
		КонецЕсли;
		
		СтрокаПриказКаманд = СтрокаПриказКаманд + ТекстВступления + КомандироватьВОднодневную + СтрокаСотрудник + " в " + Командир.КудаКомандировать + " для " +
		Командир.ЦельКомандировки.ПолноеНаименование + " на " 	+ ПолучитьСклоненияСтрокиПоЧислу("день", КоличествоДнейПриПродлениии,,,"ПД=Именительный")[0] + ТекстНачалаИОкончанияКомандировки;
		
		СуточнаяНорма = " " + ПолучитьСклоненияСтрокиПоЧислу("рубль", Объект.СуточнаяНормаВыплатВодителю)[0] + ".";
		
		Если КолВоди > 0 И Объект.ВыбранныеПриказы[итерКо].ВыплатаВодителю И Объект.ВыбранныеПриказы[итерКо].СВозвращением Тогда
			СтрокаПриказКаманд =СтрокаПриказКаманд+ " с ежедневным возвращением к месту жительства." + " Общая выплата водителю " + СтрокаСВодителем + " составляет в сутки" + СуточнаяНорма;	
		ИначеЕсли КолВоди > 0 И Объект.ВыбранныеПриказы[итерКо].ВыплатаВодителю  Тогда
			СтрокаПриказКаманд = СтрокаПриказКаманд+ " Общая выплата водителю " + СтрокаСВодителем + " составляет в сутки" + СуточнаяНорма;
			КолВоди = 0;
		ИначеЕсли Объект.ВыбранныеПриказы[итерКо].СВозвращением Тогда 		
			СтрокаПриказКаманд =СтрокаПриказКаманд+ " с ежедневным возвращением к месту жительства.";
		КонецЕсли;
		
		// Если дни командировки выпадают на выходной день то он переносится на рабочий день
		Если Объект.ВыбранныеПриказы[итерКо].СчитатьРабочимиДнями = Истина Тогда
			
			Если Не Объект.ВыбранныеПриказы[итерКо].РабочиеНачало = Дата(1,1,1) Или Не Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Дата(1,1,1) Тогда
				
				//Количество рабочих дней
				Если Объект.ВыбранныеПриказы[итерКо].РабочиеНачало = Дата(1,1,1) Или  Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Дата(1,1,1) Тогда 
					МодульЧисла = 1;
				Иначе 
					КоличествоДней = (НачалоДня(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание) - НачалоДня(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало))/(60*60*24);
					МодульЧисла = ?(КоличествоДней > 0, КоличествоДней, -КоличествоДней)+1;
				КонецЕсли;
				
				ВыходныеДни = "";
				
				РабочиеДни = "";
				ТекстДаты = "";
				//Текст промежутка между датами 
				Если МодульЧисла > 2 Тогда
					ТекстДаты = " по "
				Иначе 
					ТекстДаты = " и ";
				КонецЕсли;
				
				// Рабочие
				// Рабочий один день
				Если МодульЧисла = 1 тогда
					Если Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Дата(1,1,1)
						Или Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание = Объект.ВыбранныеПриказы[итерКо].РабочиеНачало Тогда
						
						РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочим днем";
						
					ИначеЕсли Объект.ВыбранныеПриказы[итерКо].РабочиеНачало = Дата(1,1,1) Тогда
						
						РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочим днем";
					КонецЕсли;
				//Рабочий в приделах одного месяца	
				ИначеЕсли НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало) = НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание)  Тогда 
					
					РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ=дд") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочими днями";
				//Рабочие в пределах одного года 	
				ИначеЕсли НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание)  Тогда 
					
					РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ='дд ММММ'; ДЛФ=DD") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ'; ДЛФ=DD") + " рабочими днями";
				//Рабочние дни между годами	
				ИначеЕсли Не НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание)  Тогда 
					
					РабочиеДни = " " + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеНачало, "ДФ='дд ММММ гггг'; ДЛФ=DD")+" г." + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].РабочиеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г." + " рабочими днями";
					
				КонецЕсли;
				
				//Количество выходных дней 
				Если Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) Или  Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1) Тогда 
					МодульЧисла = 1;
				Иначе 
					КоличествоДней = (НачалоДня(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание) - НачалоДня(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало))/(60*60*24);
					МодульЧисла = ?(КоличествоДней > 0, КоличествоДней, -КоличествоДней)+1;
				КонецЕсли;
				
				// Выходные
				// Выходной по требованию рабочего
				Если Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) И Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1) Тогда
					Если МодульЧисла = 1 Тогда 
						ВыходныеДни = " выходного дня по заявлению работников.";	
					Иначе 
						ВыходныеДни = " выходных дней по заявлению работников.";	
					КонецЕсли;
				Иначе
					// Выходной один день 
					Если МодульЧисла = 1 И (Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) Или Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1)
						Или Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание) Тогда 
						
						Если Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание = Дата(1,1,1) Или Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание Тогда
							
							ВыходныеДни = " выходного дня " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ='дд ММММ гггг';ДЛФ=DD")  + " г.";
							
						ИначеЕсли Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало = Дата(1,1,1) Тогда
							
							ВыходныеДни = " выходного дня " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
						КонецЕсли;
					// Выходные дни в пределах месяца	
					ИначеЕсли НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало) = НачалоМесяца(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание)  Тогда 
						
						ВыходныеДни = " выходных дней " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ=дд") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
					// Выходные дни в пределах года	
					ИначеЕсли НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание)  Тогда 
						
						ВыходныеДни = " выходных дней " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ='дд ММММ'; ДЛФ=DD") + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
					// Выходные дни между годами 	
					ИначеЕсли Не НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало) = НачалоГода(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание)  Тогда 
						
						ВыходныеДни = " выходных дней " + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеНачало, "ДФ='дд ММММ гггг'; ДЛФ=DD")+" г." + ТекстДаты + Формат(Объект.ВыбранныеПриказы[итерКо].ВыходныеОкончание, "ДФ='дд ММММ гггг'; ДЛФ=DD") + " г.";
						
					КонецЕсли;
				КонецЕсли;
				
				СтрокаПриказКаманд = СтрокаПриказКаманд + " Считать" + РабочиеДни  + ", с предоставлением" + ВыходныеДни;
				
			Иначе
				
				Сообщить("Не выбранна дата начала рабочих дней");
				
			КонецЕсли;
			
		КонецЕсли;
		
               
	СтрокаПриказКаманд = СтрЗаменить(СтрокаПриказКаманд,"i","I"); 
	СтрокаПриказКаманд =  Документы.ПриказКомандировки.ЗаменаКавычек(СтрокаПриказКаманд);


		 

		ТекстПриказ.Параметры.НомерСтроки = "" + итерОбзац + ".";
		ТекстПриказ.Параметры.ТекстПриказа = СтрокаПриказКаманд;
		ТаблДок.Вывести(ТекстПриказ);  
		СтрокаПриказКаманд = "";
		итерОбзац = итерОбзац + 1;
		итерКо = итерКо+1;
		итерСо = 0; 
		СтрокаСотрудник = "";
		КолВоди = 0;
	КонецЦикла;
	Подвал = Макет.ПолучитьОбласть("НачальникФИО");
	Подвал.Параметры.ДолжностьН = Объект.ПодписываетПриказ.Должность.Наименование;
	Подвал.Параметры.ФИОН = Объект.ПодписываетПриказ.Наименование;
	ТаблДок.Вывести(Подвал);
	Возврат ТаблДок;
КонецФункции

&НаСервере
Процедура ВыбранныеПриказыСчитатьРабочимоДнямиПриИзмененииНаСервере()
	
	СодержТаблиц = Объект.ВыбранныеПриказы.Выгрузить().ВыгрузитьКолонку("СчитатьРабочимиДнями");
	Количество = СодержТаблиц.Количество();
	КолОтмеченых = 0;
	Для итератор = 0 по Количество-1 Цикл 	
		Если СодержТаблиц[итератор] = Истина Тогда 
			Элементы.ДатаПеренесенияВыходныхНачало.Видимость = Истина;
			Элементы.ДатаПеренесенияВыходныхОкончание.Видимость = Истина;
			КолОтмеченых = КолОтмеченых + 1;
		КонецЕсли;
	КонецЦикла;
	Если КолОтмеченых = 0 Тогда
		Элементы.ДатаПеренесенияВыходныхНачало.Видимость = Ложь;
		Элементы.ДатаПеренесенияВыходныхОкончание.Видимость = Ложь;
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПриказыСчитатьРабочимоДнямиПриИзменении(Элемент)
	ВыбранныеПриказыСчитатьРабочимоДнямиПриИзмененииНаСервере();
	
	ВыбраннаяСтрока = Элементы.ВыбранныеПриказы.ТекущиеДанные;
	
	Если ВыбраннаяСтрока.СчитатьРабочимиДнями = Ложь Тогда
		ВыбраннаяСтрока.ВыходныеНачало= Дата(1,1,1);
		ВыбраннаяСтрока.ВыходныеОкончание = Дата(1,1,1);
		ВыбраннаяСтрока.РабочиеНачало = Дата(1,1,1);
		ВыбраннаяСтрока.РабочиеОкончание = Дата(1,1,1);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеПриказыРабочиеНачалоПриИзмененииНаСервере(СтруктураДатНачалаИОкончания)
	
	ВыбранныйДокумент = СтруктураДатНачалаИОкончания.СсылкаНазваниеКомандировки;
	Соответствует = Истина;
	Если ВыбранныйДокумент.НачалоКомандировки <= СтруктураДатНачалаИОкончания.РабочиеНачало И ВыбранныйДокумент.ОкончаниеКомандировки >= СтруктураДатНачалаИОкончания.РабочиеНачало Тогда
		
		Если СтруктураДатНачалаИОкончания.РабочиеНачало > СтруктураДатНачалаИОкончания.РабочиеОкончание 
			И Не СтруктураДатНачалаИОкончания.РабочиеОкончание = Дата(1,1,1) И Не СтруктураДатНачалаИОкончания.РабочиеНачало = Дата(1,1,1) Тогда 
			
			Сообщить("Начало рабочих дней не должна быть больше даты окончания!!!");
			Соответствует = Ложь;
			
		КонецЕсли;
		
	Иначе
		Сообщить("Рабочие дни должны входить в командировачные дни!!!");
		Соответствует = Ложь;
	КонецЕсли;	
	
	Возврат Соответствует;
КонецФункции

&НаСервере
Функция ВыбранныеПриказыРабочиеОкончаниеПриИзмененииНаСервере(СтруктураДатНачалаИОкончания)
	
	ВыбранныйДокумент = СтруктураДатНачалаИОкончания.СсылкаНазваниеКомандировки;
	Соответствует = Истина;
	Если ВыбранныйДокумент.НачалоКомандировки <= СтруктураДатНачалаИОкончания.РабочиеОкончание И ВыбранныйДокумент.ОкончаниеКомандировки >= СтруктураДатНачалаИОкончания.РабочиеОкончание Тогда
		
		Если СтруктураДатНачалаИОкончания.РабочиеНачало > СтруктураДатНачалаИОкончания.РабочиеОкончание 
			И Не СтруктураДатНачалаИОкончания.РабочиеОкончание = Дата(1,1,1) И Не СтруктураДатНачалаИОкончания.РабочиеНачало = Дата(1,1,1) Тогда 
			
			Сообщить("Начало рабочих дней не должна быть больше даты окончания!!!");
			Соответствует = Ложь;
			
		КонецЕсли;

	Иначе
		Сообщить("Рабочие дни должны входить в командировачные дни!!!");
		Соответствует = Ложь;
	КонецЕсли;	
	
	Возврат Соответствует;
КонецФункции


&НаКлиенте
Процедура ВыбранныеПриказыРабочиеКакВыходныеПриИзменении(Элемент)
	ВыбраннаяСтрока = Элементы.ВыбранныеПриказы.ТекущиеДанные;

	СтруктураДатНачалаИОкончания = Новый Структура;
	СтруктураДатНачалаИОкончания.Вставить("РабочиеНачало",ВыбраннаяСтрока.РабочиеНачало);
	СтруктураДатНачалаИОкончания.Вставить("РабочиеОкончание",ВыбраннаяСтрока.РабочиеОкончание);
	
	СтруктураДатНачалаИОкончания.Вставить("СсылкаНазваниеКомандировки",ВыбраннаяСтрока.НазваниеКомандировки);
	
	Если Не ВыбранныеПриказыРабочиеНачалоПриИзмененииНаСервере(СтруктураДатНачалаИОкончания) Тогда
		
		ВыбраннаяСтрока.РабочиеНачало = Дата(1,1,1);
	ИначеЕсли ВыбраннаяСтрока.РабочиеОкончание = Дата(1,1,1) Тогда
		ВыбраннаяСтрока.РабочиеОкончание = ВыбраннаяСтрока.РабочиеНачало;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПриказыРабочиеКакВыходныеОкончаниеПриИзменении(Элемент)
	ВыбраннаяСтрока = Элементы.ВыбранныеПриказы.ТекущиеДанные;

	СтруктураДатНачалаИОкончания = Новый Структура;
	СтруктураДатНачалаИОкончания.Вставить("РабочиеНачало",ВыбраннаяСтрока.РабочиеНачало);
	СтруктураДатНачалаИОкончания.Вставить("РабочиеОкончание",ВыбраннаяСтрока.РабочиеОкончание);
	
	СтруктураДатНачалаИОкончания.Вставить("СсылкаНазваниеКомандировки",ВыбраннаяСтрока.НазваниеКомандировки);
	
	Если Не ВыбранныеПриказыРабочиеОкончаниеПриИзмененииНаСервере(СтруктураДатНачалаИОкончания) Тогда
		ВыбраннаяСтрока.РабочиеОкончание = Дата(1,1,1);
	ИначеЕсли ВыбраннаяСтрока.РабочиеНачало = Дата(1,1,1) Тогда
		ВыбраннаяСтрока.РабочиеНачало = ВыбраннаяСтрока.РабочиеОкончание;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДатаДляСортировкиКомандировкиПриИзмененииНаСервере()
	Если Не ЗначениеЗаполнено(ДатаДляСортировкиКомандировки.ДатаНачала) Тогда
		ОбщегоНазначенияНаСервере.УдалитьЭлементыГруппыОтбораДинамическогоСписка(КомандировачныеУдостоверения,"Дата",);		
	Иначе
		МассивДат = Новый Массив;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировочноеУдостоверение.Дата КАК Дата
		|ИЗ
		|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
		|ГДЕ
		|	КомандировочноеУдостоверение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
		
		Запрос.УстановитьПараметр("ДатаНачала", ДатаДляСортировкиКомандировки.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаДляСортировкиКомандировки.ДатаОкончания); 		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи2 = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи2.Следующий() Цикл
			МассивДат.Добавить(ВыборкаДетальныеЗаписи2.Дата);
		КонецЦикла;
		
		
		ОбщегоНазначенияНаСервере.УдалитьЭлементыГруппыОтбораДинамическогоСписка(КомандировачныеУдостоверения,"Дата",);				
		ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(КомандировачныеУдостоверения,"Дата",МассивДат,,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаДляСортировкиКомандировкиПриИзменении(Элемент)
	ДатаДляСортировкиКомандировкиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПриказыВыходныеКакРабочиеПриИзменении(Элемент)
	ВыбраннаяСтрока = Элементы.ВыбранныеПриказы.ТекущиеДанные;

	Если ВыбраннаяСтрока.ВыходныеНачало <= ВыбраннаяСтрока.РабочиеОкончание Или ВыбраннаяСтрока.ВыходныеНачало <= ВыбраннаяСтрока.РабочиеНачало Тогда
		Сообщить("Выходной день неможет устанавливатся раньше чем назначаются рабочие");
		ВыбраннаяСтрока.ВыходныеНачало = Дата(1,1,1);
		ВыбраннаяСтрока.ВыходныеОкончание = Дата(1,1,1);
	ИначеЕсли ВыбраннаяСтрока.ВыходныеНачало > ВыбраннаяСтрока.ВыходныеОкончание И Не ВыбраннаяСтрока.ВыходныеОкончание = Дата(1,1,1) Тогда 
		Сообщить("Начало выходных дней не должно быть позже окончания");
		ВыбраннаяСтрока.ВыходныеОкончание = ВыбраннаяСтрока.ВыходныеНачало;
	ИначеЕсли ВыбраннаяСтрока.ВыходныеОкончание = Дата(1,1,1) Тогда
		ВыбраннаяСтрока.ВыходныеОкончание = ВыбраннаяСтрока.ВыходныеНачало;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПриказыВыходныеКакРабочиеОкончаниеПриИзменении(Элемент)
	ВыбраннаяСтрока = Элементы.ВыбранныеПриказы.ТекущиеДанные;

	Если ВыбраннаяСтрока.ВыходныеОкончание <= ВыбраннаяСтрока.РабочиеОкончание Или ВыбраннаяСтрока.ВыходныеОкончание <= ВыбраннаяСтрока.РабочиеНачало Тогда
		Сообщить("Выходной день неможет устанавливатся раньше чем назначаются рабочие");
		ВыбраннаяСтрока.ВыходныеОкончание = Дата(1,1,1);
	ИначеЕсли ВыбраннаяСтрока.ВыходныеОкончание < ВыбраннаяСтрока.ВыходныеНачало Тогда
		Сообщить("Окончание выходных дней неможет быть раньше начала");
		ВыбраннаяСтрока.ВыходныеОкончание = Дата(1,1,1);
	ИначеЕсли ВыбраннаяСтрока.ВыходныеНачало = Дата(1,1,1) Тогда 
		ВыбраннаяСтрока.ВыходныеНачало = ВыбраннаяСтрока.ВыходныеОкончание;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВыбранныеПриказыПродлениеПоДатуПриИзмененииНаСервере(ДанныеВыбраннойЯчейки)

	СовпадаетЛиНомерПриказа = Ложь;
	
	Если ДанныеВыбраннойЯчейки.ДатПродле <= ДанныеВыбраннойЯчейки.Кома.ОкончаниеКомандировки  И Не Объект.НомерПриказа = ДанныеВыбраннойЯчейки.Кома.НомерПриказа Тогда
		
		СовпадаетЛиНомерПриказа = Истина;
		Сообщить("Дата Продления меньше даты окончания командировки!");
	ИначеЕсли Объект.НомерПриказа = ДанныеВыбраннойЯчейки.Кома.НомерПриказа  Тогда  	
		
		СовпадаетЛиНомерПриказа = Истина;
		Сообщить("Эта командировка не на продление!");
	КонецЕсли;
	
	Возврат СовпадаетЛиНомерПриказа;
	
КонецФункции

&НаКлиенте
Процедура ВыбранныеПриказыПродлениеПоДатуПриИзменении(Элемент)
	СтруктураКомандировки = Новый Структура;
	
	СтруктураКомандировки.Вставить("Кома",Элементы.ВыбранныеПриказы.ТекущиеДанные.НазваниеКомандировки);
	СтруктураКомандировки.Вставить("ДатПродле",Элементы.ВыбранныеПриказы.ТекущиеДанные.ПродлениеПоДату); 

	Если Объект.ПриказСПродлением = Истина И ВыбранныеПриказыПродлениеПоДатуПриИзмененииНаСервере(СтруктураКомандировки) Тогда 
		
		 Элементы.ВыбранныеПриказы.ТекущиеДанные.ПродлениеПоДату = Дата(1,1,1);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДабавитьВсеКомандировкиИзСпискаНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КомандировочноеУдостоверение.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КомандировочноеУдостоверение КАК КомандировочноеУдостоверение
	|ГДЕ
	|	КомандировочноеУдостоверение.НомерПриказа = """"
	|	И КомандировочноеУдостоверение.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПроверкаТабЧас(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			ПеретаскиваниеКомандировочнойСДатой(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДабавитьВсеКомандировкиИзСписка(Команда)
	ДабавитьВсеКомандировкиИзСпискаНаСервере();
КонецПроцедуры
