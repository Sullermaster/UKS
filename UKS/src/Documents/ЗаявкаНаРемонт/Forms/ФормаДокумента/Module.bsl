&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьКлиентПользователя(КлиентПользователя);
	
	//При проведении установить только просмотр
	Если Объект.Проведен = Истина Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	//---------------------
	    
	Если Объект.Дата = Дата('00010101') Тогда
		Объект.Дата = ТекущаяДата()
	КонецЕсли;
	
	Если ПараметрыСеанса.ТекущийПользователь.Пользователь = Истина Тогда
		ОбщегоНазначенияНаСервере.ПолучитьТекущегоОтдела(Объект.Подразделение);
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Подразделение", "Объект.Подразделение");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыйФиксМасс = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Сотрудник.СвязиПараметровВыбора = НовыйФиксМасс;		
	ИначеЕсли ПараметрыСеанса.ТекущийПользователь.Пользователь = Ложь Тогда
		Если Не РольДоступна("Администратор") Тогда
			Элементы.Сотрудник.ТолькоПросмотр = Истина;
		КонецЕсли;
		ОбщегоНазначенияНаСервере.ПолучитьТекущегоПользователя(Объект.Сотрудник,Объект.Подразделение);
	КонецЕсли;
	//----------------------------------------------
	
	СотрудникПриИзмененииНаСервере();	
	
	//Установление Автора
		ОбщегоНазначенияНаСервере.ПолучитьТекущегоПользователя(Объект.Автор);
	//-----------------------
	
	Если Не ЗаписьЗадачиРемонта = Объект.ЗадачиРемонта И Не ЗаписьЗадачиРемонта = Перечисления.СостояниеРемонта.ПустаяСсылка() Тогда
		Если Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Новый Тогда
			Объект.ЗадачиРемонта = ЗаписьЗадачиРемонта;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя статус ремонта возвращать на ""Новый""";
			Сообщение.Поле = "ЗадачиРемонта";
			Сообщение.ПутьКДанным = "Объект.ЗадачиРемонта";
			Сообщение.Сообщить();	
		КонецЕсли;
	ИначеЕсли Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.ПустаяСсылка() Тогда
		Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Новый;	
	КонецЕсли;

	
	//Разграничение по ролям 
	Если РольДоступна("Администратор") Тогда
		ЗадачиРемонтаПриИзмененииНаСервере();
		Элементы.ГруппаФактическоеВремя.Видимость = Истина;
		//Элементы.ВнутНомер.Видимость = Истина;
	Иначе
		Элементы.ГруппаФактическоеВремя.Видимость = Ложь;
		Элементы.Номер.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.ВыполневшийСотрудник.Видимость = Ложь;
		Элементы.ФормаЗаписать.Заголовок = "Записать и закрыть";
		Элементы.ФормаЗаписать.КнопкаПоУмолчанию = Истина;
		Элементы.Комментарий.ТолькоПросмотр = Истина;
		Элементы.ЗадачиРемонта.Видимость = Ложь;
		
		ШрифтТекст = Новый Шрифт(,12,);
		ШрифтЗаголов = Новый Шрифт(,12,Истина,);
		
		Элементы.ПоискИнвентарныйНомер.ШрифтЗаголовка = ШрифтЗаголов;
		Элементы.ПричинаНеисправности.ШрифтЗаголовка = ШрифтЗаголов;
		
		Элементы.Дата.ШрифтЗаголовка = ШрифтЗаголов;
		Элементы.Дата.Шрифт = ШрифтТекст;
		Элементы.Номер.ШрифтЗаголовка = ШрифтЗаголов;
		Элементы.Номер.Шрифт = ШрифтТекст;
		
		Элементы.Сотрудник.Шрифт = ШрифтТекст;
		Элементы.Сотрудник.ШрифтЗаголовка = ШрифтЗаголов;
		
		Элементы.Подразделение.ТолькоПросмотр = Истина;
		Элементы.Подразделение.Шрифт = ШрифтТекст;
		Элементы.Подразделение.ШрифтЗаголовка = ШрифтЗаголов;
		
		Элементы.Оборудование.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Оборудование.Шрифт = ШрифтТекст;
		Элементы.Оборудование.ШрифтЗаголовка = ШрифтЗаголов;
		
		Если Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Принят Или Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Готов Тогда
			Элементы.Дата.Вид = ВидПоляФормы.ПолеНадписи;
		КонецЕсли;
		
		Длина = СтрДлина(Объект.ОписаниеПроблемы);
		Пока Сред(Объект.ОписаниеПроблемы, Длина,1 ) = Символы.ПС Или Сред(Объект.ОписаниеПроблемы, Длина,1 ) = " " Цикл
			Длина = Длина - 1; 
			Объект.ОписаниеПроблемы = Лев(Объект.ОписаниеПроблемы, Длина);
		КонецЦикла;
		
	КонецЕсли;
	//---------------------------
	
	//Запись даты для проверки ввода задним числом
	ДатаДокумента = Объект.Дата;
	//--------------------------
	
	//Запись текста для проверки изменения текста, если задача ремонта выставлена Принят
	ТекстРеквизита = Объект.ОписаниеПроблемы;
	КолличествоСимволовОписания = СтрДлина(Объект.ОписаниеПроблемы);
	//--------------------------------------------------------------------------
	
	МасПарам = Новый Массив();
	МасПарам.Добавить(Новый ПараметрВыбора("Отбор.Подразделение", Справочники.Подразделения.НайтиПоНаименованию("САПР")));
	МасПарам.Добавить(Новый ПараметрВыбора("Отбор.Пользователь", Ложь));
	ФиксМасс = Новый ФиксированныйМассив(МасПарам);
	
	Элементы.ВыполневшийСотрудник.ПараметрыВыбора = ФиксМасс;
	
	НомерКаб = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение.Наименование).Кабинеты.Количество();
	
	//Если ЗначениеЗаполнено(Объект.Кабинет) И Не Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(Объект.Кабинет, "НомерКабинета") = Неопределено Тогда
	//	Объект.ВнутНомер = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(Объект.Кабинет, "НомерКабинета").ВнутреннийНомер;
	//Иначе 
	//	Объект.ВнутНомер = Неопределено;
	//	
	//КонецЕсли;
	
	ЗаписьЗадачиРемонта = Объект.ЗадачиРемонта;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаСервере
Функция ПоискПоИнНомеру(ИнвентарныйНомер)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Оборудование.Ссылка КАК Ссылка,
		|	Оборудование.Размещение КАК Размещение,
		|	Оборудование.ВидОборудования.Наименование КАК ВидОборудованияНаименование,
		|	Оборудование.Наименование КАК Наименование,
		|	Оборудование.Изготовитель.Наименование КАК ИзготовительНаименование
		|ИЗ
		|	Справочник.Оборудование КАК Оборудование
		|ГДЕ
		|	Оборудование.ИнвентарныйНомер = &ИнвентарныйНомер";
	Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	       
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НайденоеОборудование = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Если НЕ НайденоеОборудование = Справочники.Оборудование.ПустаяСсылка() Тогда
		Если НЕ НайденоеОборудование = Неопределено И НЕ Объект.ПоискИнвентарныйНомер = 0 Тогда
			
			Сообщить("(каб." + ВыборкаДетальныеЗаписи.Размещение + ") " + ВыборкаДетальныеЗаписи.ВидОборудованияНаименование + 
			", " + ВыборкаДетальныеЗаписи.Наименование + ", " + ВыборкаДетальныеЗаписи.ИзготовительНаименование);
			
			Элементы.ИнфоОборудования.Заголовок = "(каб." + ВыборкаДетальныеЗаписи.Размещение + ") " + ВыборкаДетальныеЗаписи.ВидОборудованияНаименование + 
			", " + ВыборкаДетальныеЗаписи.Наименование + ", " + ВыборкаДетальныеЗаписи.ИзготовительНаименование;
			Элементы.ИнфоОборудования.Видимость = Истина;
			
			Объект.Кабинет = ВыборкаДетальныеЗаписи.Размещение;
			Объект.Оборудование = ВыборкаДетальныеЗаписи.Ссылка;
		ИначеЕсли НайденоеОборудование = Неопределено Или Объект.ПоискИнвентарныйНомер = 0 Тогда
			Элементы.ИнфоОборудования.Видимость = Ложь;
			Объект.Оборудование = Справочники.Оборудование.ПустаяСсылка();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Инвентарный номер введён неверно или оборудования ещё нет в базе";
			Сообщение.Поле = "Оборудование";
			Сообщение.ПутьКДанным = "Объект.ПоискИнвентарныйНомер";
			Сообщение.Сообщить(); 
		КонецЕсли;
		Возврат НайденоеОборудование;
	КонецЕсли; 
КонецФункции

&НаКлиенте
Процедура ПоискИнвентарныйНомерПриИзменении(Элемент)
	ОчиститьСообщения();
	ПоискПоИнНомеру(Объект.ПоискИнвентарныйНомер);
 КонецПроцедуры

&НаСервере
Функция ПоискПоОборудованию(СсылкаОборудования)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Оборудование.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	Оборудование.Ссылка КАК Ссылка,
		|	Оборудование.ВидОборудования.Ссылка КАК ВидОборудованияСсылка,
		|	Оборудование.Изготовитель.Наименование КАК ИзготовительНаименование,
		|	Оборудование.ВидОборудования.Наименование КАК ВидОборудованияНаименование,
		|	Оборудование.Размещение КАК Размещение,
		|	Оборудование.Наименование КАК Наименование,
		|	Оборудование.ОтветственноеЛицо КАК ОтветственноеЛицо
		|ИЗ
		|	Справочник.Оборудование КАК Оборудование
		|ГДЕ
		|	Оборудование.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаОборудования);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НайденныйИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
	КонецЦикла;
	
	Если Объект.Оборудование = Справочники.Оборудование.ПустаяСсылка() Тогда
		
		Элементы.ИнфоОборудования.Видимость = Ложь;
		
	Иначе
		Если Не ВыборкаДетальныеЗаписи.ОтветственноеЛицо = Справочники.Сотрудники.ПустаяСсылка() Тогда
			Объект.Кабинет = Объект.Оборудование.Размещение;
			//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Размещение) И Не Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(ВыборкаДетальныеЗаписи.Размещение, "НомерКабинета") = Неопределено Тогда
			//	Объект.ВнутНомер = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(ВыборкаДетальныеЗаписи.Размещение, "НомерКабинета").ВнутреннийНомер;
			//Иначе 
			//	Объект.ВнутНомер = Неопределено;
			//КонецЕсли;
		КонецЕсли;
		Сообщить("(каб." + ВыборкаДетальныеЗаписи.Размещение + ") Вид: " + ВыборкаДетальныеЗаписи.ВидОборудованияНаименование + 
		", Название: " + ВыборкаДетальныеЗаписи.Наименование + ", Изготовитель: " + ВыборкаДетальныеЗаписи.ИзготовительНаименование);
		Если Не ВыборкаДетальныеЗаписи.ОтветственноеЛицо = Справочники.Сотрудники.ПустаяСсылка() Тогда
			ТекстОтветственные = "Отв.: " + ВыборкаДетальныеЗаписи.ОтветственноеЛицо+ ", ";
		Иначе
			ТекстОтветственные = "";
		КонецЕсли;
		Элементы.ИнфоОборудования.Заголовок = ТекстОтветственные + "(каб." + ВыборкаДетальныеЗаписи.Размещение + ") " + ВыборкаДетальныеЗаписи.ВидОборудованияНаименование + 
		", " + ВыборкаДетальныеЗаписи.Наименование + ", " + ВыборкаДетальныеЗаписи.ИзготовительНаименование;
		
		
		Элементы.ИнфоОборудования.Видимость = Истина;
	КонецЕсли;
	Возврат НайденныйИнвентарныйНомер;
КонецФункции

&НаКлиенте
Процедура ОборудованиеПриИзменении(Элемент)
	ОчиститьСообщения();
	Объект.ПоискИнвентарныйНомер = ПоискПоОборудованию(Объект.Оборудование);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если РольДоступна("Заявка") И Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Принят Тогда
		Если СтрДлина(Объект.ОписаниеПроблемы) < КолличествоСимволовОписания И Не Прав(Объект.ОписаниеПроблемы, КолличествоСимволовОписания) = ТекстРеквизита Тогда
			Объект.ОписаниеПроблемы = ТекстРеквизита;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Описание проблемы можно только дописать!";
			Сообщение.Поле = "ОписаниеПроблемы";
			Сообщение.ПутьКДанным = "Объект.ОписаниеПроблемы";
			Сообщение.Сообщить();		
		КонецЕсли;
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(Объект.Кабинет) Тогда
	//	Сообщение = Новый СообщениеПользователю();
	//	Сообщение.Текст = "Заполните поле ""Кабинет""!";
	//	Сообщение.Поле = "Кабинет";
	//	Сообщение.ПутьКДанным = "Объект.Кабинет";
	//	Сообщение.Сообщить();
	//	Отказ = Истина;
	//КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОписаниеПроблемы) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Заполните поле ""Описание проблемы""!";
		Сообщение.Поле = "ОписаниеПроблемы";
		Сообщение.ПутьКДанным = "Объект.ОписаниеПроблемы";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;

	Если Объект.ЗадачиРемонта =  Перечисления.СостояниеРемонта.Готов И Объект.ДатаВыполнения < Объект.ДатаПринятия И РольДоступна("Администратор") Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Дата выполнения """ + Формат(Объект.ДатаВыполнения, "ДЛФ=Д")+""" не может быть меньше даты принятия заявки """+ Формат(Объект.ДатаПринятия, "ДЛФ=Д") + """, поэтому она была заменена!";
		Сообщение.Поле = "ДатаВыполнения";
		Сообщение.ПутьКДанным = "Объект.ДатаВыполнения";
		Сообщение.Сообщить();
		Если Объект.ДатаВыполнения < Объект.ДатаПринятия Тогда
			Элементы.ДатаВыполнения.ТолькоПросмотр = Ложь;
			Объект.ДатаВыполнения = Объект.ДатаПринятия;
			Элементы.ДатаВыполнения.ТолькоПросмотр = Истина;
		КонецЕсли;
		Отказ = Истина;
	КонецЕсли;
	
	//Если Объект.ФактическиОтработаноеВремя=0 Тогда
	//	Если Не Объект.ДатаПринятия=Дата(1,1,1) И Не Объект.ДатаВыполнения=Дата(1,1,1) Тогда;
	//		Сообщить("Всего времени:"+ОбщегоНазначенияНаСервере.ВычеслитьКоличествоЧасов(Объект.ДатаПринятия,Объект.ДатаВыполнения));
	//	КонецЕсли;	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	Если Не Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка() Тогда
		Объект.Подразделение = Объект.Сотрудник.Подразделение;
		
		Элементы.Кабинет.СписокВыбора.Очистить();
		
		НомерКаб = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение.Наименование).Кабинеты.Количество();
		Если НомерКаб <> 0 Тогда
			Для Сч = 0 По НомерКаб - 1 Цикл
				Элементы.Кабинет.СписокВыбора.Добавить(Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение.Наименование).Кабинеты[Сч].НомерКабинета);
			КонецЦикла;
		Иначе 
			Объект.Кабинет = Неопределено;
			//Объект.ВнутНомер = Неопределено;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Оборудование.Ссылка КАК Ссылка,
		|	Оборудование.Размещение КАК Размещение,
		|	Оборудование.ВидОборудования.Наименование КАК ВидОборудованияНаименование,
		|	Оборудование.Наименование КАК Наименование,
		|	Оборудование.Изготовитель.Наименование КАК ИзготовительНаименование,
		|	Оборудование.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	Оборудование.ОтветственноеЛицо КАК ОтветственноеЛицо
		|ИЗ
		|	Справочник.Оборудование КАК Оборудование
		|ГДЕ
		|	Оборудование.ОтветственноеЛицо = &ОтветственноеЛицо";
		Запрос.УстановитьПараметр("ОтветственноеЛицо", Объект.Сотрудник);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		КолличествоОборуд = ВыборкаДетальныеЗаписи.Количество();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НайденоеОборудование = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
		
		Если НЕ НайденоеОборудование = Неопределено Тогда
			Если КолличествоОборуд = 1 И Объект.ПоискИнвентарныйНомер = 0 И Объект.Оборудование = Справочники.Оборудование.ПустаяСсылка() Тогда
				Объект.Оборудование = ВыборкаДетальныеЗаписи.Ссылка;
				Объект.ПоискИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				Если Не ВыборкаДетальныеЗаписи.ОтветственноеЛицо = Справочники.Сотрудники.ПустаяСсылка() Тогда
					ТекстОтветственные = "Отв.: " + ВыборкаДетальныеЗаписи.ОтветственноеЛицо+ ", ";
				Иначе
					ТекстОтветственные = "";
				КонецЕсли;
				Элементы.ИнфоОборудования.Заголовок = ТекстОтветственные + " (каб." + ВыборкаДетальныеЗаписи.Размещение + ") " + ВыборкаДетальныеЗаписи.ВидОборудованияНаименование + 
				", " + ВыборкаДетальныеЗаписи.Наименование + ", " + ВыборкаДетальныеЗаписи.ИзготовительНаименование;
				Элементы.ИнфоОборудования.Видимость = Истина;
				
				Объект.Кабинет =  ВыборкаДетальныеЗаписи.Размещение;
				
				//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Размещение) И Не Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(ВыборкаДетальныеЗаписи.Размещение, "НомерКабинета") = Неопределено Тогда
				//	Объект.ВнутНомер = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(ВыборкаДетальныеЗаписи.Размещение, "НомерКабинета").ВнутреннийНомер;
				//Иначе 
				//	Объект.ВнутНомер = Неопределено;
				//	
				//КонецЕсли;
				
			ИначеЕсли КолличествоОборуд = 1 И Не Объект.ПоискИнвентарныйНомер = 0 И Не Объект.Оборудование = Справочники.Оборудование.ПустаяСсылка() Тогда
				
				Если Не ВыборкаДетальныеЗаписи.ОтветственноеЛицо = Справочники.Сотрудники.ПустаяСсылка() Тогда
					ТекстОтветственные = "Отв.: " + ВыборкаДетальныеЗаписи.ОтветственноеЛицо+ ", ";
				Иначе
					ТекстОтветственные = "";
				КонецЕсли;
				Элементы.ИнфоОборудования.Заголовок = ТекстОтветственные + " (каб." + ВыборкаДетальныеЗаписи.Размещение + ") " + ВыборкаДетальныеЗаписи.ВидОборудованияНаименование + 
				", " + ВыборкаДетальныеЗаписи.Наименование + ", " + ВыборкаДетальныеЗаписи.ИзготовительНаименование;
				Элементы.ИнфоОборудования.Видимость = Истина;
				
			ИначеЕсли  КолличествоОборуд > 1 Тогда
				
				МасПарам = Новый Массив();
				МасПарам.Добавить(Новый ПараметрВыбора("Отбор.ОтветственноеЛицо", Объект.Сотрудник));
				ФиксМасс = Новый ФиксированныйМассив(МасПарам);
				Если РольДоступна("Администратор") Тогда
				Элементы.Оборудование.ПараметрыВыбора = ФиксМасс;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
	Иначе
		
		Элементы.Кабинет.СписокВыбора.Очистить();
		Объект.Кабинет = Неопределено;
		Объект.Оборудование = Справочники.Оборудование.ПустаяСсылка();
		//Объект.ВнутНомер = Неопределено;
		Объект.ПоискИнвентарныйНомер = Неопределено;
		Элементы.ИнфоОборудования.Видимость = Ложь;
		Если РольДоступна("Администратор") Тогда
		МасПарам = Новый Массив();
		ФиксМасс = Новый ФиксированныйМассив(МасПарам);
		Элементы.Оборудование.ПараметрыВыбора = ФиксМасс;
		
	КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СотрудникПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()

	ТаблДок = Новый ТабличныйДокумент;
	Макет = Документы.ЗаявкаНаРемонт.ПолучитьМакет("Печать");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодразделение = Макет.ПолучитьОбласть("Подразделение");
	ОбластьОборудование = Макет.ПолучитьОбласть("Оборудование");
	ОбластьОписание = Макет.ПолучитьОбласть("Описание");
	ОбластьРешение = Макет.ПолучитьОбласть("ОписРеш");
	ОбластьВыполнение = Макет.ПолучитьОбласть("ОблВыполнил");
	ОбластьСотрудник = Макет.ПолучитьОбласть("Сотрудники");
	
	ОбластьЗаголовок.Параметры.Номер = Объект.Номер;
	ОбластьЗаголовок.Параметры.Дата = Формат(Объект.Дата, "ДЛФ=Д");
	ТаблДок.Вывести(ОбластьЗаголовок);
	
	ОбластьПодразделение.Параметры.Подразделение = Объект.Подразделение;
	ОбластьПодразделение.Параметры.НомерКаб = Объект.Кабинет;
	ТаблДок.Вывести(ОбластьПодразделение);

	Если НЕ Объект.Оборудование = Справочники.Оборудование.ПустаяСсылка() Тогда 
		ОбластьОборудование.Параметры.ПоискИнвентарныйНомер = Объект.ПоискИнвентарныйНомер;
		ОбластьОборудование.Параметры.Оборудование = СтрШаблон("%1 %2",Объект.Оборудование.ВидОборудования,Объект.Оборудование);
		ТаблДок.Вывести(ОбластьОборудование);
	КонецЕсли;
	
	ТекстОписанияПроблемы = СокрЛП(Объект.ОписаниеПроблемы);
	ОбластьОписание.Параметры.ОписаниеПроблемы = ТекстОписанияПроблемы;
	ТаблДок.Вывести(ОбластьОписание);
	
	Если Не ПустаяСтрока(Объект.ОписаниеРешения) Тогда
		ТекстОписанияРешения = СокрЛП(Объект.ОписаниеРешения);
		ОбластьРешение.Параметры.ОписаниеРешения = ТекстОписанияРешения;
		ТаблДок.Вывести(ОбластьРешение);
	КонецЕсли;
	
	Если Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Готов Тогда
		ОбластьВыполнение.Параметры.ДатаВыполнения = Формат(Объект.ДатаВыполнения, "ДЛФ=Д");
		ОбластьВыполнение.Параметры.ВыполнившийСотрудник = Объект.ВыполнившийСотрудник;
		ОбластьВыполнение.Параметры.ВремяВыполнения = СтрШаблон("%1 ч. %2 мин.",Формат(Объект.ФактическиОтработаноеВремяЧасов,"ЧЦ=2; ЧВН=; ЧГ=0"),
																	  Формат(Объект.ФактическиОтработаноеВремяМинут,"ЧЦ=2; ЧВН=; ЧГ=0"));
		ТаблДок.Вывести(ОбластьВыполнение);
	КонецЕсли;
	
	ОбластьСотрудник.Параметры.Сотрудник = Объект.Сотрудник;
	ТаблДок.Вывести(ОбластьСотрудник);
	
	Возврат ТаблДок;
	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	ТаблДок = ПечатьНаСервере();
	
	ТаблДок.ОтображатьСетку = Ложь;
	ТаблДок.Защита = Истина;
	ТаблДок.ТолькоПросмотр = Истина;
	ТаблДок.ОтображатьЗаголовки = Ложь;

	ТаблДок.Показать("Заявка на ремонт "+Объект.Номер+" от "+Формат(Объект.Дата,"ДЛФ=D"));
КонецПроцедуры

#Область ЗаписатьИЗакрытьДляПользователя
&НаСервере
Функция  ЗакрыитеПоРоли()
	Пров = РольДоступна("Администратор");
	Возврат Пров;
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Не ЗакрыитеПоРоли() Тогда
		Закрыть();
	КонецЕсли; 
КонецПроцедуры
#КонецОбласти
&НаСервере
Процедура ЗадачиРемонтаПриИзмененииНаСервере()
	
	Если Не ПараметрыСеанса.ТекущийПользователь.Подразделение.ИмяРуководителя = ПараметрыСеанса.ТекущийПользователь Тогда
		
		Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
		
	КонецЕсли;	
	

	
	Если Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Готов Тогда
		Элементы.ДатаПринятия.ТолькоПросмотр = Ложь;
		Элементы.ДатаВыполнения.ТолькоПросмотр = Ложь;
		
		Элементы.ДатаПринятия.Видимость = Истина;		
		Элементы.ГруппаГотово.Видимость = Истина;
		Элементы.ДатаВыполнения.Видимость = Истина;
		Элементы.ВыполневшийСотрудник.Видимость = Истина;
		Если Объект.ДатаВыполнения = Дата('00010101') Тогда
			Объект.ДатаВыполнения = ТекущаяДата();
		КонецЕсли;
		Если Объект.ДатаПринятия = Дата('00010101') Тогда
				Объект.ДатаПринятия = ТекущаяДата();
		КонецЕсли;

		Элементы.ВыполневшийСотрудник.Заголовок = "Выполнил";
		//Элементы.ДатаПринятия.ТолькоПросмотр = Истина;
		//Элементы.ДатаВыполнения.ТолькоПросмотр = Истина;
		
	ИначеЕсли Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Принят Тогда
		Элементы.ДатаПринятия.ТолькоПросмотр = Ложь;
		Элементы.ДатаВыполнения.ТолькоПросмотр = Ложь;

		
		Если Объект.ДатаПринятия = Дата('00010101') Тогда
				Объект.ДатаПринятия = ТекущаяДата();
		КонецЕсли;
		Объект.ДатаВыполнения = Дата('00010101');
		Элементы.ДатаПринятия.Видимость = Истина;
		Элементы.ГруппаГотово.Видимость = Ложь;
		Элементы.ДатаВыполнения.Видимость = Ложь;
		Элементы.ВыполневшийСотрудник.Заголовок = "Принимающий работу";
		Элементы.ДатаПринятия.ТолькоПросмотр = Истина;
		Элементы.ДатаВыполнения.ТолькоПросмотр = Истина;
	ИначеЕсли Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Новый Тогда
		Элементы.ДатаПринятия.ТолькоПросмотр = Ложь;
		Элементы.ДатаВыполнения.ТолькоПросмотр = Ложь;

		Объект.ДатаПринятия = Дата('00010101');
		Объект.ДатаВыполнения = Дата('00010101');
		Элементы.ГруппаГотово.Видимость = Ложь;
		Элементы.ДатаВыполнения.Видимость = Ложь;
		Элементы.ДатаПринятия.Видимость = Ложь;
		Элементы.ВыполневшийСотрудник.Заголовок = "Назначеный на принятие заявки";
		Элементы.ДатаПринятия.ТолькоПросмотр = Истина;
		Элементы.ДатаВыполнения.ТолькоПросмотр = Истина;		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗадачиРемонтаПриИзменении(Элемент)
	ЗадачиРемонтаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	Если Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Новый И Не РольДоступна("Администратор") Тогда
		Если Объект.Дата < ДатаДокумента И Объект.Дата < ТекущаяДата() Тогда
			Объект.Дата = ДатаДокумента;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Дата запрещена для изменения задним числом";
			Сообщение.Поле = "Дата";
			Сообщение.ПутьКДанным = "Объект.Дата";
			Сообщение.Сообщить();
		ИначеЕсли Объект.Дата > ДатаДокумента И Объект.Дата < ТекущаяДата() Тогда
			Объект.Дата = ТекущаяДата();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Дата запрещена для изменения задним числом";
			Сообщение.Поле = "Дата";
			Сообщение.ПутьКДанным = "Объект.Дата";
			Сообщение.Сообщить();
			ДатаДокумента = ТекущаяДата();
		КонецЕсли;
	ИначеЕсли Объект.Дата > ДатаДокумента И РольДоступна("Администратор") Тогда
		ДатаДокумента = Объект.Дата;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	Если Объект.Подразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		НовыйМассив1 = Новый Массив();
		НовыйФиксМасс1 = Новый ФиксированныйМассив(НовыйМассив1);
		Элементы.Сотрудник.СвязиПараметровВыбора = НовыйФиксМасс1;
		Элементы.Кабинет.СписокВыбора.Очистить();
	Иначе
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Подразделение", "Объект.Подразделение");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыйФиксМасс = Новый ФиксированныйМассив(НовыйМассив);
		
		Элементы.Сотрудник.СвязиПараметровВыбора = НовыйФиксМасс;
		
		Элементы.Кабинет.СписокВыбора.Очистить();
		
		НомерКаб = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение.Наименование).Кабинеты.Количество();
		
		Для Сч = 0 По НомерКаб - 1 Цикл
			Элементы.Кабинет.СписокВыбора.Добавить(Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение.Наименование).Кабинеты[Сч].НомерКабинета);
		КонецЦикла;
		
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПодразделениеПриИзмененииНаСервере();
КонецПроцедуры

#Область ДиологПслеЗаписи
&НаСервере
Функция ПолучитьЗадачуРаботыГотово(ВозЗад)
	Если ВозЗад = 1 Тогда 
		ПереЗад = Перечисления.СостояниеРемонта.Готов;
	ИначеЕсли ВозЗад = 2 Тогда
		ПереЗад = Перечисления.СостояниеРемонта.Принят;
	ИначеЕсли ВозЗад = 3 Тогда
		ПереЗад = Перечисления.СостояниеРемонта.Новый;
	КонецЕсли;
	Возврат ПереЗад;
КонецФункции

&НаСервере
Функция ПолучитьИмяРуковадителяИлиПользователя(Проверка) 
	
	Если Проверка = "Руководитель" Тогда
		Сотр = ПараметрыСеанса.ТекущийПользователь.Подразделение.ИмяРуководителя;
		Возврат Сотр;
	ИначеЕсли Проверка = "Пользователь" Тогда
		Сотр = ПараметрыСеанса.ТекущийПользователь;
		Возврат Сотр;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверкаПТекущегоПользователя()

	Пара = Ложь; 
	Если ПараметрыСеанса.ТекущийПользователь.Пользователь = Истина Тогда
		Пара = Истина;
		Возврат Пара;
	Иначе
		Возврат Пара;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверкаРуководителяПодразделенияТекущегоПользователя()
	
	
	Пара = Истина; 
	Если ПараметрыСеанса.ТекущийПользователь.Подразделение.ИмяРуководителя = Справочники.Сотрудники.ПустаяСсылка() Тогда
		Пара = Ложь;
		Возврат Пара;
	Иначе
		Возврат Пара;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверкаРуководителяТекущегоПользователя()
	Пара = Ложь; 
	Если ПараметрыСеанса.ТекущийПользователь.Подразделение.ИмяРуководителя = ПараметрыСеанса.ТекущийПользователь Тогда
		Пара = Истина;
		Возврат Пара;
	Иначе
		Возврат Пара;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьКлиентПользователя(ИмяПриложения)
	НомерСоединения  = НомерСоединенияИнформационнойБазы();
	
	СеансыИБ = ПолучитьСеансыИнформационнойБазы();        
    Для Каждого Сеанс Из СеансыИБ Цикл         
        Если Сеанс.НомерСоединения = НомерСоединения Тогда
				ИмяПриложения = ПредставлениеПриложения(Сеанс.ИмяПриложения); 
        КонецЕсли;   
    КонецЦикла;
	Возврат ИмяПриложения;
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для Каждого Ключ Из ПараметрыЗаписи Цикл
		ЗначениеПараметраЗаписи = Ключ.Значение;
	КонецЦикла;
		
	Если Не КлиентПользователя = "Веб-клиент" Тогда
		
		Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			Если Вопрос("Поле ""Сотрудник"" пустое,автоматически выбрать начальника отдела?",
				РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.Сотрудник = ПолучитьИмяРуковадителяИлиПользователя("Руководитель");
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Заполните поле ""Сотрудник""!";
				Сообщение.Поле = "Сотрудник";
				Сообщение.ПутьКДанным = "Объект.Сотрудник";
				Сообщение.Сообщить();
				Отказ = Истина;		
			КонецЕсли;
		КонецЕсли; 
		
		
		Если Объект.ЗадачиРемонта = ПолучитьЗадачуРаботыГотово(2) И Объект.ВыполнившийСотрудник.Пустая() 
			И Не ПроверкаПТекущегоПользователя() И Не ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И ЗакрыитеПоРоли() Тогда
			Если Вопрос("Автоматически выставить текущего пользователя как принявшего заявку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
				ОбщегоНазначенияНаСервере.ПолучитьТекущегоПользователя(Объект.ВыполнившийСотрудник);					
				Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
				КонецЕсли;
			КонецЕсли 
		ИначеЕсли ЗакрыитеПоРоли() И Не ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И Объект.ЗадачиРемонта = ПолучитьЗадачуРаботыГотово(2)
			И Не ПроверкаПТекущегоПользователя() И Не Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь") Тогда
			Если Вопрос("Заменить текущего пользователя как принявшего заявку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
				Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
				Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
				КонецЕсли;
			КонецЕсли
		ИначеЕсли ЗакрыитеПоРоли() И Не ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И Объект.ЗадачиРемонта = ПолучитьЗадачуРаботыГотово(3)
			И Не ПроверкаПТекущегоПользователя() И Объект.ВыполнившийСотрудник.Пустая() Тогда
			Если Вопрос("Автоматически выставить текущего пользователя как принявшего заявку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
				Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
				Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
				КонецЕсли;
			КонецЕсли
		ИначеЕсли ЗакрыитеПоРоли() И Не ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И Объект.ЗадачиРемонта = ПолучитьЗадачуРаботыГотово(1)
			И Не ПроверкаПТекущегоПользователя() И Объект.ВыполнившийСотрудник.Пустая() Тогда
			Если Вопрос("Автоматически выставить текущего пользователя как выполнившего работу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
				Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
				Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
				КонецЕсли;
			КонецЕсли
		КонецЕсли;
		
		Если ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И Не ПроверкаПТекущегоПользователя() И ЗакрыитеПоРоли() Тогда
			Если Не Объект.ЗадачиРемонта =  ПолучитьЗадачуРаботыГотово(1) Тогда	
				Если Вопрос("Выставить задачу ремонта ""Готово""?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					Объект.ЗадачиРемонта = ПолучитьЗадачуРаботыГотово(1);
					Элементы.ГруппаГотово.Видимость = Истина;
					Элементы.ДатаВыполнения.Видимость = Истина;
					Элементы.ВыполневшийСотрудник.Видимость = Истина;
					Объект.ДатаВыполнения = ТекущаяДата();        
					Если Объект.ВыполнившийСотрудник.Пустая()  Тогда
						Если Вопрос("Выставить текущего пользователя как выполнившего работу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
							Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
							Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
							Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
								Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
							КонецЕсли;
						Иначе
							Сообщение = Новый СообщениеПользователю;
							Сообщение.Текст = "Выберите сотрудника!";
							Сообщение.Поле = "ВыполнившийСотрудник";
							Сообщение.ПутьКДанным = "Объект.ВыполнившийСотрудник";
							Сообщение.Сообщить();
							Отказ = Истина;
						КонецЕсли;
					ИначеЕсли Не Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь") Тогда
						Если Вопрос("Заменить выполнившего работу сотрудника на текущего пользователя?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
							Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
							Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
							Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
								Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Отказ = Истина;		
				КонецЕсли;			
				
			ИначеЕсли Объект.ЗадачиРемонта =  ПолучитьЗадачуРаботыГотово(1) И  Объект.ВыполнившийСотрудник.Пустая() И Не ПроверкаПТекущегоПользователя() Тогда
				Если Вопрос("Выставить текущего пользователя как выполнившего работу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
					Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
					Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
						Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
					КонецЕсли;
				Иначе
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Выберите сотрудника!";
					Сообщение.Поле = "ВыполнившийСотрудник";
					Сообщение.ПутьКДанным = "Объект.ВыполнившийСотрудник";
					Сообщение.Сообщить();
					Отказ = Истина;
				КонецЕсли;
			ИначеЕсли Объект.ЗадачиРемонта =  ПолучитьЗадачуРаботыГотово(1) И Не Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь") И Не ПроверкаПТекущегоПользователя() Тогда
				Если Вопрос("Заменить выполнившего работу сотрудника на текущего пользователя?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
					Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
					Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
						Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И ПроверкаПТекущегоПользователя() И ЗакрыитеПоРоли() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Под общим пользователем нельзя закрыть заявку!";
			Сообщение.Сообщить();   
			Отказ = Истина; 		
		КонецЕсли;
		
	ИначеЕсли КлиентПользователя = "Веб-клиент" Тогда
		
		Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			Если ПроверкаРуководителяПодразделенияТекущегоПользователя() Тогда
				Объект.Сотрудник = ПолучитьИмяРуковадителяИлиПользователя("Руководитель");					
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Заполните поле ""Сотрудник""!";
				Сообщение.Сообщить();
				Отказ = Истина;		
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И ЗакрыитеПоРоли() Тогда
			Если Объект.ВыполнившийСотрудник.Пустая() И Не Объект.ЗадачиРемонта = ПолучитьЗадачуРаботыГотово(3)  Тогда
				Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");
			КонецЕсли;
		КонецЕсли;
		
		
		
		Если ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И Не ПроверкаПТекущегоПользователя() И ЗакрыитеПоРоли() Тогда
			Если Не Объект.ЗадачиРемонта =  ПолучитьЗадачуРаботыГотово(1) Тогда	
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Выбирете статус заявки ""Готово""";
				Сообщение.Сообщить();   
				Отказ = Истина;
			ИначеЕсли Объект.ЗадачиРемонта =  ПолучитьЗадачуРаботыГотово(1) И  Объект.ВыполнившийСотрудник.Пустая() И Не ПроверкаПТекущегоПользователя() Тогда
				
				Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Ложь;
				Объект.ВыполнившийСотрудник = ПолучитьИмяРуковадителяИлиПользователя("Пользователь");					
				Если Не ПроверкаРуководителяТекущегоПользователя() Тогда
					Элементы.ВыполневшийСотрудник.ТолькоПросмотр = Истина;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ЗначениеПараметраЗаписи = РежимЗаписиДокумента.Проведение И ПроверкаПТекущегоПользователя() И ЗакрыитеПоРоли() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Под общим пользователем нельзя закрыть заявку!";
			Сообщение.Сообщить();   
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПричинаНеисправностиПриИзмененииНаСервере()
	Если Не РольДоступна("Администратор") Тогда
		Если Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Принят Или Объект.ЗадачиРемонта = Перечисления.СостояниеРемонта.Готов Тогда
			Если (Не Лев(Объект.ОписаниеПроблемы, КолличествоСимволовОписания) = Лев(ТекстРеквизита, КолличествоСимволовОписания) И СтрДлина(Объект.ОписаниеПроблемы) >=  КолличествоСимволовОписания)
				Или СтрДлина(Объект.ОписаниеПроблемы) < КолличествоСимволовОписания Тогда
				Объект.ОписаниеПроблемы = ТекстРеквизита;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Описание проблемы можно только дописать!";
				Сообщение.Поле = "ОписаниеПроблемы";
				Сообщение.ПутьКДанным = "Объект.ОписаниеПроблемы";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПричинаНеисправностиПриИзменении(Элемент)
	ПричинаНеисправностиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КабинетПриИзмененииНаСервере()
	
	//Если ЗначениеЗаполнено(Объект.Кабинет) И Не Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(Объект.Кабинет, "НомерКабинета") = Неопределено Тогда
	//	Объект.ВнутНомер = Справочники.Подразделения.НайтиПоНаименованию(Объект.Подразделение).Кабинеты.Найти(Объект.Кабинет, "НомерКабинета").ВнутреннийНомер;
	//Иначе 
	//	Объект.ВнутНомер = Неопределено;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КабинетПриИзменении(Элемент)
	КабинетПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПроблемыНажатие(Элемент)
	ОбщегоНазначенияКлиент.ПроверитьПравописаниеТекста(Объект.ОписаниеПроблемы,Новый Структура,"Описание",ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРешенияНадписьНажатие(Элемент)
	ОбщегоНазначенияКлиент.ПроверитьПравописаниеТекста(Объект.ОписаниеРешения,Новый Структура,"Описание",ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		СообщениеВТелеграм = СтрШаблон("Новая заявка: %1 (каб. %4), %2 - %3",
										СокрЛП(ТекущийОбъект.Подразделение.Наименование),
										СокрЛП(ТекущийОбъект.Сотрудник.Наименование),
										СокрЛП(ТекущийОбъект.ОписаниеПроблемы),
										СокрЛП(ТекущийОбъект.Кабинет));
		ПользователиТелеграмм = Справочники.ИДПользователейТелеграма.Выбрать();
		Пока ПользователиТелеграмм.Следующий()Цикл
			SDK_Telegram.sendMessage(ПользователиТелеграмм.Ссылка.Код,СообщениеВТелеграм);	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
