
&НаСервереБезКонтекста
Процедура ОбновитьСтатусЗадач(МассивЗадач, НовыйСтатус)
	
	Для Каждого ТекущаяЗадача Из МассивЗадач Цикл
		
		ЗадачаОбъект = ТекущаяЗадача.ПолучитьОбъект();
		Если ЗадачаОбъект.СостояниеЗадачи=НовыйСтатус Тогда
			Продолжить;
		КонецЕсли;
		
		ЗадачаОбъект.СостояниеЗадачи = НовыйСтатус;
		
		Если НовыйСтатус = Перечисления.СостоянияЗадачи.Готова Тогда
			ЗадачаОбъект.Выполнена = Истина;
		КонецЕсли;
		
		Попытка
			ЗадачаОбъект.Записать();
		Исключение
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Не удалось изменить статус задачи" + ТекущаяЗадача + " по причине: "+ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыЗадачКлиент(МассивЗадач,Статус)
	
	Если ТипЗнч(МассивЗадач)=Тип("Массив") Тогда
		ОбновитьСтатусЗадач(МассивЗадач, Статус);
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.ЗадачиПользователю"));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоваяПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СостоянияЗадачи.Новая"));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВРаботеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СостоянияЗадачи.ВРаботе"));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОтложенаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СостоянияЗадачи.Отложена"));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокГотоваПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СостоянияЗадачи.Готова"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВсеЗадачи(Команда)
	
	ОткрытьФорму("Задача.ЗадачиПользователю.Форма.ФормаСпискаВсеЗадачи");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоваяНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Заголовок = СтрШаблон("Начальная страница: %1 (%2)",
									ПараметрыСеанса.ТекущийПользователь,
									ПараметрыСеанса.ТекущийПользователь.Должность);
	
	ЗаявкиСостояниеНовые = Истина;
	ЗаявкиСостояниеПринятые = Истина;
	ЗаявкиСостояниеГотовые = Ложь;
	
	Элементы.СписокРемонтОборудования.Период = Новый СтандартныйПериод(НачалоМесяца(ТекущаяДата()),КонецМесяца(ТекущаяДата()));
	//Элементы.СписокЛицензий.Период = Новый СтандартныйПериод(НачалоМесяца(ТекущаяДата()),КонецМесяца(ТекущаяДата()));
	
	УстановитьОтборПоПризнаку();
	
	Объект.ДатаВвода = НачалоДня(ТекущаяДата());
	
	ЗаполнитьОборудование();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПризнаку()
	
	СписокОтбора = Новый Массив;
	Если ЗаявкиСостояниеНовые Тогда
		СписокОтбора.Добавить(Перечисления.СостояниеРемонта.Новый);
	КонецЕсли;
	
	Если ЗаявкиСостояниеПринятые Тогда
		СписокОтбора.Добавить(Перечисления.СостояниеРемонта.Принят);
	КонецЕсли;
	
	Если ЗаявкиСостояниеГотовые Тогда
		СписокОтбора.Добавить(Перечисления.СостояниеРемонта.Готов);
	КонецЕсли;
	
	ОбщегоНазначенияНаСервере.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокЗаявкиНаРемонт,"ЗадачиРемонта",);
	ОбщегоНазначенияНаСервере.УстановитьЭлементОтбораДинамическогоСписка(СписокЗаявкиНаРемонт,"ЗадачиРемонта",СписокОтбора,ВидСравненияКомпоновкиДанных.ВСписке,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный,);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиСостояниеНовыеПриИзменении(Элемент)
	
	УстановитьОтборПоПризнаку();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиСостояниеПринятыеПриИзменении(Элемент)
	
	УстановитьОтборПоПризнаку();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиСостояниеГотовыеПриИзменении(Элемент)
	
	УстановитьОтборПоПризнаку();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОборудование()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОборудорваниеДляОтпечатаныхЛистов.Проведен КАК Проведен,
		|	ОборудорваниеДляОтпечатаныхЛистов.Дата КАК Дата,
		|	ОборудорваниеДляОтпечатаныхЛистов.СписокОборудования.(
		|		Оборудование КАК Оборудование,
		|		РазмерЛиста КАК РазмерЛиста,
		|		ЦветПечати КАК ЦветПечати
		|	) КАК СписокОборудования
		|ИЗ
		|	Документ.ОборудорваниеДляОтпечатаныхЛистов КАК ОборудорваниеДляОтпечатаныхЛистов
		|ГДЕ
		|	ОборудорваниеДляОтпечатаныхЛистов.Проведен = ИСТИНА
		|	И ОборудорваниеДляОтпечатаныхЛистов.Дата <= &ДатаВвода";
	
	Запрос.УстановитьПараметр("ДатаВвода",Объект.ДатаВвода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ОБъект.СписокОборудования.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВыборкаСписокОборудования = ВыборкаДетальныеЗаписи.СписокОборудования.Выбрать();
		Пока ВыборкаСписокОборудования.Следующий() Цикл 
			НоваяСтрока = Объект.СписокОборудования.Добавить();	
			НоваяСтрока.Оборудование = ВыборкаСписокОборудования.Оборудование;
			НоваяСтрока.Размещение = ВыборкаСписокОборудования.Оборудование.Размещение;
			НоваяСтрока.Изготовитель = ВыборкаСписокОборудования.Оборудование.Изготовитель;
			НоваяСтрока.АдресОборудования = ВыборкаСписокОборудования.Оборудование.ИПАдрес;
			НоваяСтрока.РазмерЛиста = ВыборкаСписокОборудования.РазмерЛиста;
			НоваяСтрока.ЦветПечати = ВыборкаСписокОборудования.ЦветПечати;
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьОборудование()

&НаКлиенте
Процедура СписокОборудованияАдресОборудованияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПерейтиПоНавигационнойСсылке("http://"+СокрЛП(Элемент));

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОборудованиеНаКлиенте(Команда)
	
	ЗаполнитьОборудование();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаписиНаСервере()
	
	Если Объект.СписокОборудования.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЖурналОтпечатаныхЛистов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Объект.ДатаВвода);
	Для Каждого СтрокаТаблицыОборудование Из Объект.СписокОборудования Цикл
		Запись = НаборЗаписей.Добавить();
		Запись.Период = Объект.ДатаВвода;
		Запись.Оборудование = СтрокаТаблицыОборудование.Оборудование;
		Запись.РазмерЛиста = СтрокаТаблицыОборудование.РазмерЛиста;
		Запись.ЦветПечати = СтрокаТаблицыОборудование.ЦветПечати;
		Запись.КоличествоОтпечатанных = СтрокаТаблицыОборудование.КоличествоОтпечатанных;
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаписи(Команда)
	
	СоздатьЗаписиНаСервере();
	Сообщить("Создано записей "+Объект.СписокОборудования.Количество());
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОборудованияАдресОборудованияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОборудованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СписокОборудованияАдресОборудования" Тогда
		СтандартнаяОбработка = Ложь;
		ПерейтиПоНавигационнойСсылке("http://"+СокрЛП(Элемент.ТекущиеДанные.АдресОборудования));	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЗаписиНаСервере()
	
	НаборЗаписей = РегистрыСведений.ЖурналОтпечатаныхЛистов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Объект.ДатаВвода);
	НаборЗаписей.Записать(Истина);

КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписи(Команда)
	УдалитьЗаписиНаСервере();
КонецПроцедуры
