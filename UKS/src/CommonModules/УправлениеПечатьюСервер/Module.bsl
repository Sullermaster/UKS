Функция ПолучитьДанныеОбщегоМакета(ИмяМакета) Экспорт
	
	АдресХранилища = Новый УникальныйИдентификатор();
	Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	ВременныйФайл = ПолучитьИмяВременногоФайла("doc");
	Документ = Макет.Получить();
	Документ.SaveAs(ВременныйФайл);
	//Макет.Записать(ВременныйФайл);
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ВременныйФайл), АдресХранилища);
	УдалитьФайлы(ВременныйФайл);
	
	Возврат Адрес;
	
КонецФункции

Функция ПолучитьОбщийМакетНаСервере(ИмяМакета) Экспорт
	
	Макет = ПолучитьОбщийМакет(ИмяМакета);
	Возврат Макет;
	
КонецФункции

Функция ПечатьАкт(ПереданныеПараметры,ПараметрыТаблиц,ТипАкта) Экспорт
	
	Перем ПолноеИмяФайла;
	Если ТипАкта.ИмяПредопределенныхДанных = "Ремонт" Тогда
		Макет = УправлениеПечатьюСервер.ПолучитьОбщийМакетНаСервере("АктРемонтаОборудования");
		НомерКолонкиНоменклатураИзъятая = 2;
		НомерКолонкиОснованиеИзъятия = 3;
		НомерКолонкиИнверныйНомер = 4;
		НомерКолонкиНоменклатура = 5;
		НомерКолонкиОснование = 6;
	ИначеЕсли ТипАкта.ИмяПредопределенныхДанных = "Модернизация" Тогда
		Макет = УправлениеПечатьюСервер.ПолучитьОбщийМакетНаСервере("АктМодернизацииОборудования");
		НомерКолонкиНоменклатураИзъятая = 2;
		НомерКолонкиОснованиеИзъятия = 3;
		НомерКолонкиСтоимостьИзъятия = 4;
		НомерКолонкиИнверныйНомер = 5;
		НомерКолонкиНоменклатура = 6;
		НомерКолонкиОснование = 7;
		НомерКолонкиКоличество = 8;
		НомерКолонкиСтоимостьУстановленного = 9;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	MSWord = Макет.Получить();
	
	Попытка
		Документ = MSWord.Application.Documents(1);
		Документ.Activate();
		
		Для Каждого ЭлементПараметр Из ПереданныеПараметры Цикл
			ОбъектДляЗамены = Документ.Content.Find;
			ОбъектДляЗамены.Execute("["+ЭлементПараметр.Ключ+"]",
									Ложь,
									Истина,
									Ложь,
									,
									,
									Истина,
									,
									Ложь,
									ЭлементПараметр.Значение);
		КонецЦикла;			  
		
		//Таблица номенклатуры
		ТаблицаВорд = Документ.Tables(1);		

		НомерСтроки = 3;
		НП = 1;
		
		ТаблицаНоменклатуры = ПолучитьИзВременногоХранилища(ПараметрыТаблиц.АдресТаблицаНоменкатуры);
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ТаблицаВорд.Rows.Add();
			
			НомерПоПорядку = ТаблицаВорд.Cell(НомерСтроки, 1).Range;
			НомерПоПорядку.Text = НП;
			
			НоменклатраИзъятая = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиНоменклатураИзъятая).Range;
			Если ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураИзъятая.Наименование) Тогда
				Если ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураИзъятая.Родитель) Тогда
					НоменклатраИзъятая.Text = СтрШаблон("%2 %1",СтрокаТаблицы.НоменклатураИзъятая.Наименование,СтрокаТаблицы.НоменклатураИзъятая.Родитель.Наименование);
				Иначе
					НоменклатраИзъятая.Text = СтрокаТаблицы.НоменклатураИзъятая.Наименование;
				КонецЕсли;
			Иначе
				НоменклатраИзъятая.Text = "-";
			КонецЕсли;
			
			Основание = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиОснованиеИзъятия).Range;
			Если ЗначениеЗаполнено(СтрокаТаблицы.Основание) Тогда
				Основание.Text = СтрокаТаблицы.Основание;
			Иначе
				Основание.Text = "-";
			КонецЕсли;
			
			ИнвентарныйНомер = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиИнверныйНомер).Range;
			ИнвентарныйНомер.Text = ПереданныеПараметры.ИнвентарныйНомер;
			
			Номенклатура = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиНоменклатура).Range;
			Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура.Наименование) Тогда
				Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура.Родитель) Тогда
					Номенклатура.Text = СтрШаблон("%2 %1",СтрокаТаблицы.Номенклатура.Наименование,СтрокаТаблицы.Номенклатура.Родитель.Наименование);	
				Иначе	
					Номенклатура.Text = СтрокаТаблицы.Номенклатура.Наименование;
				КонецЕсли;
			Иначе
				Номенклатура.Text = "-";
			КонецЕсли;
			
			Работа = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиОснование).Range;
			Если ЗначениеЗаполнено(СтрокаТаблицы.Работа) Тогда
				Работа.Text = СтрокаТаблицы.Работа;
			Иначе
				Работа.Text = "-";
			КонецЕсли;
			
			Если ТипАкта.ИмяПредопределенныхДанных = "Модернизация" Тогда
				СтоимостьИзъятого =  ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиСтоимостьИзъятия).Range;
				Если СтрокаТаблицы.СтоимостьИзъятого<>0 Тогда
					СтоимостьИзъятого.Text = СтрокаТаблицы.СтоимостьИзъятого;	
				Иначе	
					СтоимостьИзъятого.Text = "-";
				КонецЕсли;
				
				КолВоУстановленного = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиКоличество).Range;
				Если СтрокаТаблицы.Количество<>0 Тогда
					КолВоУстановленного.Text = СтрокаТаблицы.Количество;
				Иначе
					КолВоУстановленного.Text = "-";
				КонецЕсли;
				
				СтоимостьУстановленного = ТаблицаВорд.Cell(НомерСтроки, НомерКолонкиСтоимостьУстановленного).Range;
				Если СтрокаТаблицы.СтоимостьУстановленного<>0 Тогда
					СтоимостьУстановленного.Text = СтрокаТаблицы.СтоимостьУстановленного;
				Иначе
					СтоимостьУстановленного.Text = "-";
				КонецЕсли;
			КонецЕсли;
			
			
			НП = НП+1;
			НомерСтроки = НомерСтроки+1;
			
		КонецЦикла;
		
		ТаблицаВорд2 = Документ.Tables(2);		
			
		НомерСтроки = 1;
		НП = 1;
		
		ТаблицаОтветственныхЛиц = ПолучитьИзВременногоХранилища(ПараметрыТаблиц.АдресТаблицаОтветственныхлиц);
		КоличествоСтрок = ТаблицаОтветственныхЛиц.Количество();
		Для Каждого СтрокаТаблицы Из ТаблицаОтветственныхЛиц Цикл
			
			Если НомерСтроки=1 Тогда
			Иначе	
				ТаблицаВорд2.Rows.Add();
			КонецЕсли;	
				
			Должность = ТаблицаВорд2.Cell(НомерСтроки, 1).Range;
			Должность.Text = СтрокаТаблицы.Должность;
			
			Подпись = ТаблицаВорд2.Cell(НомерСтроки, 2).Range;
			Подпись.Text = "__________________";
			
			Сотрудник = ТаблицаВорд2.Cell(НомерСтроки, 3).Range;
			Сотрудник.Text = СтрокаТаблицы.Сотрудник.Наименование;
			
			НП = НП+1;
			
			НомерСтроки = НомерСтроки+1;
			
		КонецЦикла;
		
		
		ПолноеИмяФайла = ПолучитьИмяВременногоФайла("Docx");
		Документ.SaveAS(ПолноеИмяФайла);
		Документ.Close();
 
		Результат = Новый ДвоичныеДанные(ПолноеИмяФайла);
		#Если Клиент Тогда
			НачатьУдалениеФайлов(,ПолноеИмяФайла);
		#Иначе
			УдалитьФайлы(ПолноеИмяФайла);
		#КонецЕсли
	Исключение
 		// Если произойдет ошибка выводятся данные об ошибке и объект закрывается. 
 		СообщениеПользователю = Новый СообщениеПользователю();
 		СообщениеПользователю.Текст = ОписаниеОшибки();
 		СообщениеПользователю.Сообщить();
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции


Функция ПечататьКомандировку(ПараметрПоля, ПараметрТаблицы) Экспорт
	
	Макет = УправлениеПечатьюСервер.ПолучитьОбщийМакетНаСервере("КомандировочноеУдостоверениеИКоллективныйАвансовыйОтчет");
	MSWord = Макет.Получить();
	
	Документ = MSWord.Application.Documents(1);
	Документ.Activate();
	
	
	Для Каждого ЭлементПараметр Из ПараметрПоля Цикл
		ОбъектДляЗамены = Документ.Content.Find;
		ОбъектДляЗамены.Execute("["+ЭлементПараметр.Ключ+"]", Истина,	Истина, Ложь,,, Истина,, Ложь, ЭлементПараметр.Значение);
	КонецЦикла;			
	

	
	ТаблицаВорд = Документ.Tables(1);		
	
	НомерСтроки = 2;
	НП = 1;
	
	ТаблицаГруппы = ПолучитьИзВременногоХранилища(ПараметрТаблицы.ГруппаРаботников);
	Для Каждого СтрокаТаблицы Из ТаблицаГруппы Цикл
		
		
		
		
		НомерПоПорядку = ТаблицаВорд.Cell(НомерСтроки, 1).Range;
		НомерПоПорядку.Text = НП;
		
		Если НП > 10 Тогда 
		ТаблицаВорд.Rows.Add();
	КонецЕсли;
	
		ФИОполное = ТаблицаВорд.Cell(НомерСтроки, 2).Range;
		Если ЗначениеЗаполнено(СтрокаТаблицы.ФИОполное.Наименование) Тогда
			ФИОполное.Text = СтрокаТаблицы.ФИОполное.Наименование;
		Иначе
			ФИОполное.Text = "-";
		КонецЕсли;
		
		ГруппаДолжность = ТаблицаВорд.Cell(НомерСтроки, 3).Range;
		Если ЗначениеЗаполнено(СтрокаТаблицы.ФИОполное.Должность.Наименование) Тогда
			ГруппаДолжность.Text = СтрокаТаблицы.ФИОполное.Должность.Наименование;
		Иначе
			ГруппаДолжность.Text = "-";
		КонецЕсли;
		
		ГруппаПримечание = ТаблицаВорд.Cell(НомерСтроки, 4).Range;
		Если ЗначениеЗаполнено(СтрокаТаблицы.Примечание) Тогда
			ГруппаПримечание.Text = СтрокаТаблицы.Примечание;
		КонецЕсли;


		НП = НП+1;
		НомерСтроки = НомерСтроки+1;
	КонецЦикла;
	
	ТаблицаВорд = Документ.Tables(2);	
	
	НомерСтроки = 5;
	
	Для НомерСтрокЦели = 0 По 8 Цикл
		
		Тепкст = СтрДлина(ТаблицаВорд.Cell(НомерСтроки, 1).Range().Text);

		Если Тепкст = 2 Тогда
			
			ТаблицаВорд.Rows(НомерСтроки ).Delete();
			НомерСтроки = НомерСтроки-1;
		КонецЕсли; 
		НомерСтроки = НомерСтроки+1;
	КонецЦикла;
	
	
	ТаблицаВорд = Документ.Tables(13);		
	
	НомерСтроки = 3;
	НП = 1;
	НомерДопСтроки = 2;
	
	ТаблицаГруппы = ПолучитьИзВременногоХранилища(ПараметрТаблицы.ГруппаРаботников);
	Для Каждого СтрокаТаблицы Из ТаблицаГруппы Цикл
		
		ТаблицаВорд.Rows(НомерДопСтроки).Select();
		MSWord.Application.Selection.InsertRowsBelow(1);
		НомерПоПорядку = ТаблицаВорд.Cell(НомерСтроки, 1).Range;
		НомерПоПорядку.Text = НП;
		
		ФИОполное = ТаблицаВорд.Cell(НомерСтроки, 2).Range;
		Если ЗначениеЗаполнено(СтрокаТаблицы.ФИОполное.Наименование) Тогда
			ФИОполное.Text = СтрокаТаблицы.ФИОполное.Наименование;
		КонецЕсли;
		
		НП = НП+1;
		НомерСтроки = НомерСтроки+1;
		НомерДопСтроки=НомерДопСтроки+1;
	КонецЦикла;
	
	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("Docx");
	Документ.SaveAS(ПолноеИмяФайла);
	Документ.Close();
	
	Результат = Новый ДвоичныеДанные(ПолноеИмяФайла);
	Возврат Результат;

КонецФункции

Функция ПечататьКомандировкуСоло(ПараметрПоля) Экспорт
	
	Макет = УправлениеПечатьюСервер.ПолучитьОбщийМакетНаСервере("КомандировочноеУдостоверениеИКоллективныйАвансовыйОтчетДляОдного");
	MSWord = Макет.Получить();
	
	Документ = MSWord.Application.Documents(1);
	Документ.Activate();
	
	
	Для Каждого ЭлементПараметр Из ПараметрПоля Цикл
		ОбъектДляЗамены = Документ.Content.Find;
		ОбъектДляЗамены.Execute("["+ЭлементПараметр.Ключ+"]", Истина,	Истина, Ложь,,, Истина,, Ложь, ЭлементПараметр.Значение);
	КонецЦикла;			
	
	
	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("Docx");
	Документ.SaveAS(ПолноеИмяФайла);
	Документ.Close();
	
	Результат = Новый ДвоичныеДанные(ПолноеИмяФайла);
	Возврат Результат;
КонецФункции

Функция ПечататьКомандировкуПриказ(ПараметрПоля) Экспорт
	
	Макет = УправлениеПечатьюСервер.ПолучитьОбщийМакетНаСервере("КомандировочноеПриказ");
	MSWord = Макет.Получить();
	
	Документ = MSWord.Application.Documents(1);
	Документ.Activate();
	
	
	Для Каждого ЭлементПараметр Из ПараметрПоля Цикл
		ОбъектДляЗамены = Документ.Content.Find;
		ОбъектДляЗамены.Execute("["+ЭлементПараметр.Ключ+"]", Истина,	Истина, Ложь,,, Истина,, Ложь, ЭлементПараметр.Значение);
	КонецЦикла;			

	ПоискАбзаца = Символ(13) + "   ";
	
	Для Каждого ЭлементПараметр Из ПараметрПоля Цикл
		ОбъектДляЗамены = Документ.Content.Find;
		ОбъектДляЗамены.Execute(ПоискАбзаца, Ложь, Ложь, Ложь,,, Истина,, Ложь, "");
	КонецЦикла;

	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("Docx");
	Документ.SaveAS(ПолноеИмяФайла);
	Документ.Close();
	
	
	
	Результат = Новый ДвоичныеДанные(ПолноеИмяФайла);
	Возврат Результат;

КонецФункции


Функция ПечататьКомандировкуВПриказ(ПараметрПоля) Экспорт
	
	Макет = УправлениеПечатьюСервер.ПолучитьОбщийМакетНаСервере("КомандировочноеВПриказ");
	MSWord = Макет.Получить();
	
	Документ = MSWord.Application.Documents(1);
	Документ.Activate();
	
	
	Для Каждого ЭлементПараметр Из ПараметрПоля Цикл
		ОбъектДляЗамены = Документ.Content.Find;
		ОбъектДляЗамены.Execute("["+ЭлементПараметр.Ключ+"]", Истина,	Истина, Ложь,,, Истина,, Ложь, ЭлементПараметр.Значение);
	КонецЦикла;			

	ПоискАбзаца = Символ(13) + "   ";
	
	Для Каждого ЭлементПараметр Из ПараметрПоля Цикл
		ОбъектДляЗамены = Документ.Content.Find;
		ОбъектДляЗамены.Execute(ПоискАбзаца, Ложь, Ложь, Ложь,,, Истина,, Ложь, "");
	КонецЦикла;

	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("Docx");
	Документ.SaveAS(ПолноеИмяФайла);
	Документ.Close();
	
	
	
	Результат = Новый ДвоичныеДанные(ПолноеИмяФайла);
	Возврат Результат;

КонецФункции
